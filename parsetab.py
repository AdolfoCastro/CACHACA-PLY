
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xa9\x1d?\xde\xd1\x9bD\xdd\x18\xd8\x8ewh\xb4NT'
    
_lr_action_items = {'MIN':([99,101,102,103,104,105,106,107,108,119,121,123,126,127,146,147,150,157,160,161,163,165,166,194,195,196,197,198,227,236,],[-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,-126,-126,169,-112,-110,-109,-108,-96,-99,-107,-100,-103,-106,-104,-97,-98,-102,-101,-123,-122,]),'RES_STRING':([7,29,34,36,37,39,40,41,46,74,76,77,79,93,96,98,99,100,101,102,103,104,105,106,107,108,112,115,146,147,150,151,188,191,216,218,227,236,242,],[13,13,-25,13,13,-24,13,13,-126,-126,-32,13,-34,13,-35,-37,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-126,13,-110,-109,-108,-33,-36,-126,-41,-43,-123,-122,-42,]),'EQ_EQ':([99,101,102,103,104,105,106,107,108,119,121,123,126,127,146,147,150,157,160,161,163,165,166,194,195,196,197,198,227,236,],[-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,-126,-126,172,-112,-110,-109,-108,-96,-99,-107,-100,-103,-106,-104,-97,-98,-102,-101,-123,-122,]),'RES_FUNC':([1,3,5,6,8,9,10,17,18,20,21,22,23,27,28,33,35,42,44,46,52,54,60,63,64,65,69,72,76,77,79,81,85,86,88,90,95,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,194,195,196,197,198,208,209,227,236,],[-3,7,-126,-5,-126,-9,-126,-8,7,-11,-6,-4,-7,-10,-126,7,-26,-126,-27,-126,-56,-46,-55,-52,-49,-126,-54,-53,-32,-126,-34,-12,-51,-50,-48,-68,-120,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,-104,-97,-98,-102,-101,-76,-73,-123,-122,]),'RES_DOUBLE':([7,29,34,36,37,39,40,41,46,74,76,77,79,93,96,98,99,100,101,102,103,104,105,106,107,108,112,115,146,147,150,151,188,191,216,218,227,236,242,],[14,14,-25,14,14,-24,14,14,-126,-126,-32,14,-34,14,-35,-37,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-126,14,-110,-109,-108,-33,-36,-126,-41,-43,-123,-122,-42,]),'LCURLY':([74,91,148,],[97,132,189,]),'RES_FOR':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,90,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,193,194,195,196,197,198,199,206,208,209,211,227,236,240,],[-26,53,53,-27,-126,-56,-55,-52,53,-54,-53,-32,-126,-34,-51,-50,-68,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,53,-104,-97,-98,-102,-101,53,53,-76,-73,53,-123,-122,53,]),'RES_ELSE':([35,44,46,52,60,63,64,65,69,72,76,77,79,85,86,88,90,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,194,195,196,197,198,199,208,209,221,227,236,],[-26,-27,-126,-56,-55,-52,-49,-126,-54,-53,-32,-126,-34,-51,-50,-48,-68,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,-104,-97,-98,-102,-101,-126,-76,-73,231,-123,-122,]),'RES_END':([35,43,44,46,52,60,63,64,65,69,72,73,76,77,79,85,86,88,90,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,194,195,196,197,198,208,209,227,236,],[-26,-126,-27,-126,-56,-55,-52,-49,-126,-54,-53,95,-32,-126,-34,-51,-50,-48,-68,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,-104,-97,-98,-102,-101,-76,-73,-123,-122,]),'COL':([19,25,26,31,32,70,81,99,101,102,103,104,105,106,107,108,119,121,123,126,146,147,150,155,157,160,161,163,165,166,167,173,175,177,184,191,192,194,195,196,197,198,200,201,202,203,204,205,227,230,231,236,],[29,-47,-121,42,43,94,-12,-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,-126,-126,-126,-110,-109,-108,193,-96,-99,-107,-100,-103,-106,199,-88,-95,206,211,217,219,-104,-97,-98,-102,-101,-90,-89,-91,-92,-94,-93,-123,239,240,-122,]),'RES_IF':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,90,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,193,194,195,196,197,198,199,206,208,209,211,227,236,240,],[-26,55,55,-27,-126,-56,-55,-52,55,-54,-53,-32,-126,-34,-51,-50,-68,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,55,-104,-97,-98,-102,-101,55,55,-76,-73,55,-123,-122,55,]),'RES_PRINT':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,90,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,193,194,195,196,197,198,199,206,208,209,211,227,236,240,],[-26,62,62,-27,-126,-56,-55,-52,62,-54,-53,-32,-126,-34,-51,-50,-68,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,62,-104,-97,-98,-102,-101,62,62,-76,-73,62,-123,-122,62,]),'RES_START':([1,5,6,8,9,10,17,18,20,21,22,23,27,35,42,44,46,52,54,60,63,64,65,69,72,76,77,79,81,85,86,88,90,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,194,195,196,197,198,208,209,227,236,],[-3,-126,-5,-126,-9,-126,-8,26,-11,-6,-4,-7,-10,-26,-126,-27,-126,-56,-46,-55,-52,-49,-126,-54,-53,-32,-126,-34,-12,-51,-50,-48,-68,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,-104,-97,-98,-102,-101,-76,-73,-123,-122,]),'MIN_EQ':([99,101,102,103,104,105,106,107,108,119,121,123,126,127,146,147,150,157,160,161,163,165,166,194,195,196,197,198,227,236,],[-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,-126,-126,168,-112,-110,-109,-108,-96,-99,-107,-100,-103,-106,-104,-97,-98,-102,-101,-123,-122,]),'RES_FLOAT':([7,29,34,36,37,39,40,41,46,74,76,77,79,93,96,98,99,100,101,102,103,104,105,106,107,108,112,115,146,147,150,151,188,191,216,218,227,236,242,],[16,16,-25,16,16,-24,16,16,-126,-126,-32,16,-34,16,-35,-37,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-126,16,-110,-109,-108,-33,-36,-126,-41,-43,-123,-122,-42,]),'RES_ARRAY':([29,34,36,39,41,46,74,76,77,79,93,96,98,99,100,101,102,103,104,105,106,107,108,112,115,146,147,150,151,188,191,216,218,227,236,242,],[40,-25,40,-24,40,-126,-126,-32,40,-34,40,-35,-37,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-126,40,-110,-109,-108,-33,-36,-126,-41,-43,-123,-122,-42,]),'DIF':([99,101,102,103,104,105,106,107,108,119,121,123,126,127,146,147,150,157,160,161,163,165,166,194,195,196,197,198,227,236,],[-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,-126,-126,174,-112,-110,-109,-108,-96,-99,-107,-100,-103,-106,-104,-97,-98,-102,-101,-123,-122,]),'MINUS':([84,87,89,91,92,99,101,102,103,104,105,106,107,108,119,120,121,123,127,142,146,147,150,158,159,161,162,163,164,165,166,168,169,170,171,172,174,194,197,198,219,227,236,246,],[122,122,122,122,122,-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,122,159,-126,-112,122,-110,-109,-108,122,122,-107,122,-100,122,-103,-106,122,122,122,122,122,122,-104,-102,-101,122,-123,-122,122,]),'RES_DEF':([1,5,6,8,9,10,17,21,22,23,35,42,43,44,46,52,60,63,65,69,72,76,77,79,81,85,86,90,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,193,194,195,196,197,198,199,206,208,209,211,227,236,240,],[-3,-126,-5,19,-9,-126,-8,-6,-4,-7,-26,19,19,-27,-126,-56,-55,-52,19,-54,-53,-32,-126,-34,-12,-51,-50,-68,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,19,-104,-97,-98,-102,-101,19,19,-76,-73,19,-123,-122,19,]),'E_END':([35,44,46,52,56,57,58,59,60,61,63,64,65,69,71,72,76,77,79,85,86,88,90,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,141,143,146,147,150,151,157,160,161,163,165,166,176,182,183,193,194,195,196,197,198,199,206,208,209,211,220,221,222,225,227,232,233,234,236,240,244,],[-26,-27,-126,-56,-59,85,-60,-58,-55,86,-52,-49,-126,-54,-57,-53,-32,-126,-34,-51,-50,-48,-68,-126,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-85,-87,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,-126,-104,-97,-98,-102,-101,-126,-126,-76,-73,-126,-80,-126,-79,-126,-123,-82,-84,-86,-122,-126,-83,]),'COMMA':([46,82,99,101,102,103,104,105,106,107,108,112,144,146,147,150,178,181,213,227,236,237,],[78,115,-112,-111,-115,-119,-113,-116,-118,-117,-114,78,185,-110,-109,-108,207,210,226,-123,-122,241,]),'PLUS':([84,87,89,91,92,99,101,102,103,104,105,106,107,108,119,120,121,123,127,142,146,147,150,158,159,161,162,163,164,165,166,168,169,170,171,172,174,194,197,198,219,227,236,246,],[124,124,124,124,124,-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,124,158,-126,-112,124,-110,-109,-108,124,124,-107,124,-100,124,-103,-106,124,124,124,124,124,124,-104,-102,-101,124,-123,-122,124,]),'RES_TRUE':([75,84,87,89,91,92,97,120,122,124,131,132,142,154,158,159,162,164,168,169,170,171,172,174,185,189,207,210,219,226,228,229,241,246,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'$end':([0,2,4,20,27,28,33,35,42,44,46,52,54,60,63,64,65,69,72,76,77,79,85,86,88,90,95,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,194,195,196,197,198,208,209,227,236,],[-126,0,-2,-11,-10,-126,-1,-26,-126,-27,-126,-56,-46,-55,-52,-49,-126,-54,-53,-32,-126,-34,-51,-50,-48,-68,-120,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,-104,-97,-98,-102,-101,-76,-73,-123,-122,]),'CTE_STRING':([75,84,87,89,91,92,97,120,122,124,131,132,142,154,158,159,162,164,168,169,170,171,172,174,185,189,207,210,219,226,228,229,241,246,],[99,99,127,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'DIVIDE':([99,101,102,103,104,105,106,107,108,119,123,127,146,147,150,161,166,194,227,236,],[-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,162,-112,-110,-109,-108,-107,-106,-104,-123,-122,]),'CTE_DOUBLE':([75,84,87,89,91,92,97,120,122,124,131,132,142,154,158,159,162,164,168,169,170,171,172,174,185,189,207,210,219,226,228,229,241,246,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'EQUALS':([46,67,107,117,215,243,],[75,91,148,154,228,246,]),'TIMES':([99,101,102,103,104,105,106,107,108,119,123,127,146,147,150,161,166,194,227,236,],[-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,164,-112,-110,-109,-108,-107,-106,-104,-123,-122,]),'RES_WHILE':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,90,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,193,194,195,196,197,198,199,206,208,209,211,227,236,240,],[-26,66,66,-27,-126,-56,-55,-52,66,-54,-53,-32,-126,-34,-51,-50,-68,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,66,-104,-97,-98,-102,-101,66,66,-76,-73,66,-123,-122,66,]),'LPAREN':([30,53,55,62,66,67,68,84,87,89,91,92,120,142,158,159,162,164,168,169,170,171,172,174,219,246,],[41,83,84,87,89,92,93,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'RPAREN':([11,12,13,14,16,34,39,48,50,51,74,82,92,96,98,99,101,102,103,104,105,106,107,108,114,116,118,119,121,123,125,126,127,128,129,130,137,138,139,140,146,147,150,153,156,157,160,161,163,165,166,173,175,188,191,194,195,196,197,198,200,201,202,203,204,205,216,218,227,236,242,247,],[-20,-17,-21,-19,-18,-25,-24,81,-23,-22,-126,-126,-126,-35,-37,-112,-111,-115,-119,-113,-116,-118,-117,-114,-14,-16,155,-105,-126,-126,167,-126,-67,176,-66,177,182,-63,-62,183,-110,-109,-108,-15,194,-96,-99,-107,-100,-103,-106,-88,-95,-36,-126,-104,-97,-98,-102,-101,-90,-89,-91,-92,-94,-93,-41,-43,-123,-122,-42,-81,]),'CTE_INT':([75,84,87,89,91,92,97,113,120,122,124,131,132,142,149,154,158,159,162,164,168,169,170,171,172,174,185,189,207,210,219,226,228,229,241,246,],[106,106,106,106,106,106,106,152,106,106,106,106,106,106,190,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'ID':([11,12,13,14,15,16,24,34,35,38,39,42,43,44,45,46,47,49,50,51,52,60,63,65,69,72,74,75,76,77,78,79,83,84,85,86,87,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,121,122,123,124,131,132,133,134,135,136,142,146,147,150,151,154,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,174,176,182,183,185,188,189,191,193,194,195,196,197,198,199,206,207,208,209,210,211,216,218,219,226,227,228,229,236,239,240,241,242,246,],[-20,-17,-21,-19,-13,-18,30,-25,-26,46,-24,67,67,-27,74,-126,80,82,-23,-22,-56,-55,-52,67,-54,-53,-126,107,-32,-126,112,-34,117,107,-51,-50,107,107,-68,107,107,-35,107,-37,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,107,-126,107,-126,107,107,107,-72,-71,-70,-69,107,-110,-109,-108,-33,107,-96,107,107,-99,-107,107,-100,107,-103,-106,107,107,107,107,107,107,-65,-61,-64,107,-36,107,-126,67,-104,-97,-98,-102,-101,67,67,107,-76,-73,107,67,-41,-43,107,107,-123,107,107,-122,243,67,107,-42,107,]),'RES_LIST':([29,34,36,39,41,46,74,76,77,79,93,96,98,99,100,101,102,103,104,105,106,107,108,112,115,146,147,150,151,188,191,216,218,227,236,242,],[37,-25,37,-24,37,-126,-126,-32,37,-34,37,-35,-37,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-126,37,-110,-109,-108,-33,-36,-126,-41,-43,-123,-122,-42,]),'MAY_EQ':([99,101,102,103,104,105,106,107,108,119,121,123,126,127,146,147,150,157,160,161,163,165,166,194,195,196,197,198,227,236,],[-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,-126,-126,171,-112,-110,-109,-108,-96,-99,-107,-100,-103,-106,-104,-97,-98,-102,-101,-123,-122,]),'RES_INT':([7,29,34,36,37,39,40,41,46,74,76,77,79,93,96,98,99,100,101,102,103,104,105,106,107,108,112,115,146,147,150,151,188,191,216,218,227,236,242,],[12,12,-25,12,12,-24,12,12,-126,-126,-32,12,-34,12,-35,-37,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-126,12,-110,-109,-108,-33,-36,-126,-41,-43,-123,-122,-42,]),'RES_READ':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,90,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,193,194,195,196,197,198,199,206,208,209,211,227,236,240,],[-26,68,68,-27,-126,-56,-55,-52,68,-54,-53,-32,-126,-34,-51,-50,-68,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,68,-104,-97,-98,-102,-101,68,68,-76,-73,68,-123,-122,68,]),'MAY':([99,101,102,103,104,105,106,107,108,119,121,123,126,127,146,147,150,157,160,161,163,165,166,194,195,196,197,198,227,236,],[-112,-111,-115,-119,-113,-116,-118,-117,-114,-105,-126,-126,170,-112,-110,-109,-108,-96,-99,-107,-100,-103,-106,-104,-97,-98,-102,-101,-123,-122,]),'RES_SWITCH':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,90,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,193,194,195,196,197,198,199,206,208,209,211,227,236,240,],[-26,70,70,-27,-126,-56,-55,-52,70,-54,-53,-32,-126,-34,-51,-50,-68,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,70,-104,-97,-98,-102,-101,70,70,-76,-73,70,-123,-122,70,]),'CTE_FLOAT':([75,84,87,89,91,92,97,120,122,124,131,132,142,154,158,159,162,164,168,169,170,171,172,174,185,189,207,210,219,226,228,229,241,246,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'RES_FALSE':([75,84,87,89,91,92,97,120,122,124,131,132,142,154,158,159,162,164,168,169,170,171,172,174,185,189,207,210,219,226,228,229,241,246,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'RES_BOOLEAN':([7,29,34,36,37,39,40,41,46,74,76,77,79,93,96,98,99,100,101,102,103,104,105,106,107,108,112,115,146,147,150,151,188,191,216,218,227,236,242,],[11,11,-25,11,11,-24,11,11,-126,-126,-32,11,-34,11,-35,-37,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-126,11,-110,-109,-108,-33,-36,-126,-41,-43,-123,-122,-42,]),'RCURLY':([99,101,102,103,104,105,106,107,108,144,145,146,147,150,180,181,186,187,212,213,214,224,227,235,236,],[-112,-111,-115,-119,-113,-116,-118,-117,-114,-126,188,-110,-109,-108,209,-74,-40,-38,-39,-124,227,-75,-123,-125,-122,]),'LBRACKET':([80,91,107,217,],[113,131,149,229,]),'RBRACKET':([99,101,102,103,104,105,106,107,108,146,147,150,152,178,179,190,223,227,236,237,238,245,],[-112,-111,-115,-119,-113,-116,-118,-117,-114,-110,-109,-108,191,-77,208,215,-78,-123,-122,-44,242,-45,]),'RES_PROTO':([0,6,10,81,],[3,-5,3,-12,]),'RES_CASE':([35,44,46,52,60,63,64,65,69,72,76,77,79,85,86,88,90,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,121,123,133,134,135,136,146,147,150,151,157,160,161,163,165,166,176,182,183,194,195,196,197,198,208,209,211,225,227,236,],[-26,-27,-126,-56,-55,-52,-49,-126,-54,-53,-32,-126,-34,-51,-50,-48,-68,142,-112,-31,-111,-115,-119,-113,-116,-118,-117,-114,-29,-28,-30,-126,-105,-126,-126,-72,-71,-70,-69,-110,-109,-108,-33,-96,-99,-107,-100,-103,-106,-65,-61,-64,-104,-97,-98,-102,-101,-76,-73,-126,142,-123,-122,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prototipos':([3,18,33,],[6,25,25,]),'bloque':([42,43,65,193,199,206,211,240,],[54,73,88,220,221,222,225,244,]),'cons':([75,84,87,89,91,92,97,120,122,124,131,132,142,154,158,159,162,164,168,169,170,171,172,174,185,189,207,210,219,226,228,229,241,246,],[100,119,119,119,119,119,144,119,161,166,178,181,119,192,119,119,119,119,119,119,119,119,119,119,144,213,178,181,119,213,236,237,237,119,]),'prototipos_2':([82,],[114,]),'vars':([8,42,43,65,193,199,206,211,240,],[17,52,52,52,52,52,52,52,52,]),'prototipos_1':([41,115,],[48,153,]),'programa2':([5,],[8,]),'programa3':([8,28,],[18,33,]),'seen_prototipo':([6,],[10,]),'programa1':([0,10,],[1,21,]),'termino':([84,87,89,91,92,120,142,158,159,162,164,168,169,170,171,172,174,219,246,],[121,121,121,121,121,121,121,121,121,197,198,121,121,121,121,121,121,121,121,]),'vars1_1':([77,],[110,]),'forexp':([83,],[118,]),'array':([29,36,41,77,93,115,],[34,34,34,34,34,34,]),'llamada1':([92,],[137,]),'programa1_1':([10,],[22,]),'if':([42,43,65,193,199,206,211,240,],[56,56,56,56,56,56,56,56,]),'ciclo':([42,43,65,193,199,206,211,240,],[57,57,57,57,57,57,57,57,]),'tipo':([41,93,115,],[49,140,49,]),'vars2':([46,],[77,]),'array2':([229,241,],[238,245,]),'exp1':([121,],[157,]),'array1':([191,],[216,]),'seen_id_asignacion':([67,],[90,]),'vars1':([29,36,77,],[35,44,109,]),'while':([42,43,65,193,199,206,211,240,],[71,71,71,71,71,71,71,71,]),'vars3':([46,112,],[76,151,]),'llamada':([42,43,65,193,199,206,211,240,],[60,60,60,60,60,60,60,60,]),'estructura':([29,36,41,77,93,115,],[36,36,50,36,50,50,]),'condicion':([42,43,65,193,199,206,211,240,],[61,61,61,61,61,61,61,61,]),'ifelse':([221,],[232,]),'factor':([84,87,89,91,92,120,142,158,159,162,164,168,169,170,171,172,174,219,246,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'conslist1':([189,226,],[214,235,]),'main':([18,],[28,]),'lectura':([42,43,65,193,199,206,211,240,],[63,63,63,63,63,63,63,63,]),'empty':([0,5,8,10,28,42,43,46,65,74,77,82,92,94,112,121,123,126,144,191,193,199,206,211,221,225,240,],[4,9,20,23,20,64,64,79,64,98,111,116,138,143,79,160,165,175,186,218,64,64,64,64,233,143,64,]),'cons_loop':([97,185,],[145,212,]),'exp_3':([103,],[146,]),'list1':([74,],[96,]),'seen_dato':([15,],[24,]),'generaglo':([1,],[5,]),'asignlist':([91,],[134,]),'asignlist1':([132,210,],[180,224,]),'dato':([7,29,36,37,40,41,77,93,115,],[15,38,38,45,47,51,38,51,51,]),'estatutos':([42,43,65,193,199,206,211,240,],[65,65,65,65,65,65,65,65,]),'expresion_1':([126,],[173,]),'comienza_main':([26,],[32,]),'escritura1':([87,],[128,]),'termino1':([123,],[163,]),'expresion':([84,87,89,92,120,142,219,246,],[125,129,130,139,156,184,230,247,]),'asignarray':([91,],[133,]),'conslist':([75,84,87,89,91,92,97,120,122,124,131,132,142,154,158,159,162,164,168,169,170,171,172,174,185,189,207,210,219,226,228,229,241,246,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'se_uso':([25,],[31,]),'for':([42,43,65,193,199,206,211,240,],[59,59,59,59,59,59,59,59,]),'asignacion':([42,43,65,193,199,206,211,240,],[69,69,69,69,69,69,69,69,]),'switch':([42,43,65,193,199,206,211,240,],[58,58,58,58,58,58,58,58,]),'switch2':([94,225,],[141,234,]),'consarray':([75,84,87,89,91,92,97,120,122,124,131,132,142,154,158,159,162,164,168,169,170,171,172,174,185,189,207,210,219,226,228,229,241,246,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'list':([29,36,41,77,93,115,],[39,39,39,39,39,39,]),'modulos':([18,33,],[27,27,]),'exp_1':([107,],[150,]),'programa':([0,],[2,]),'exp':([84,87,89,91,92,120,142,158,159,168,169,170,171,172,174,219,246,],[126,126,126,135,126,126,126,195,196,200,201,202,203,204,205,126,126,]),'exp_2':([106,],[147,]),'cons_loop_1':([144,],[187,]),'asignarray1':([131,207,],[179,223,]),'asignacion1':([91,],[136,]),'escritura':([42,43,65,193,199,206,211,240,],[72,72,72,72,72,72,72,72,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> programa1 generaglo programa2 programa3 main programa3','programa',6,'p_programa','parser.py',32),
  ('programa -> empty','programa',1,'p_programa','parser.py',33),
  ('generaglo -> <empty>','generaglo',0,'p_generaglo','parser.py',37),
  ('programa1 -> RES_PROTO prototipos seen_prototipo programa1_1','programa1',4,'p_programa1','parser.py',44),
  ('seen_prototipo -> <empty>','seen_prototipo',0,'p_seen_prototipo','parser.py',49),
  ('programa1_1 -> programa1','programa1_1',1,'p_programa1_1','parser.py',56),
  ('programa1_1 -> empty','programa1_1',1,'p_programa1_1','parser.py',57),
  ('programa2 -> programa2 vars','programa2',2,'p_programa2','parser.py',62),
  ('programa2 -> empty','programa2',1,'p_programa2','parser.py',63),
  ('programa3 -> programa3 modulos','programa3',2,'p_programa3','parser.py',68),
  ('programa3 -> empty','programa3',1,'p_programa3','parser.py',69),
  ('prototipos -> RES_FUNC dato seen_dato ID LPAREN prototipos_1 RPAREN','prototipos',7,'p_prototipos','parser.py',74),
  ('seen_dato -> <empty>','seen_dato',0,'p_seen_dato','parser.py',80),
  ('prototipos_1 -> tipo ID prototipos_2','prototipos_1',3,'p_prototipos_1','parser.py',85),
  ('prototipos_2 -> COMMA prototipos_1','prototipos_2',2,'p_prototipos_2','parser.py',89),
  ('prototipos_2 -> empty','prototipos_2',1,'p_prototipos_2','parser.py',90),
  ('dato -> RES_INT','dato',1,'p_dato','parser.py',94),
  ('dato -> RES_FLOAT','dato',1,'p_dato','parser.py',95),
  ('dato -> RES_DOUBLE','dato',1,'p_dato','parser.py',96),
  ('dato -> RES_BOOLEAN','dato',1,'p_dato','parser.py',97),
  ('dato -> RES_STRING','dato',1,'p_dato','parser.py',98),
  ('tipo -> dato','tipo',1,'p_tipo','parser.py',105),
  ('tipo -> estructura','tipo',1,'p_tipo','parser.py',106),
  ('estructura -> list','estructura',1,'p_estructura','parser.py',111),
  ('estructura -> array','estructura',1,'p_estructura','parser.py',112),
  ('vars -> RES_DEF COL vars1','vars',3,'p_vars','parser.py',117),
  ('vars1 -> estructura vars1','vars1',2,'p_vars1','parser.py',122),
  ('vars1 -> dato ID vars2 vars1_1','vars1',4,'p_vars1','parser.py',123),
  ('vars1_1 -> vars1','vars1_1',1,'p_vars1_1','parser.py',132),
  ('vars1_1 -> empty','vars1_1',1,'p_vars1_1','parser.py',133),
  ('vars2 -> EQUALS cons','vars2',2,'p_vars2','parser.py',138),
  ('vars2 -> vars3','vars2',1,'p_vars2','parser.py',139),
  ('vars3 -> COMMA ID vars3','vars3',3,'p_vars3','parser.py',144),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',145),
  ('list -> RES_LIST dato ID list1','list',4,'p_list','parser.py',150),
  ('list1 -> LCURLY cons_loop RCURLY','list1',3,'p_list1','parser.py',154),
  ('list1 -> empty','list1',1,'p_list1','parser.py',155),
  ('cons_loop -> cons cons_loop_1','cons_loop',2,'p_cons_loop','parser.py',160),
  ('cons_loop_1 -> COMMA cons_loop','cons_loop_1',2,'p_cons_loop_1','parser.py',165),
  ('cons_loop_1 -> empty','cons_loop_1',1,'p_cons_loop_1','parser.py',166),
  ('array -> RES_ARRAY dato ID LBRACKET CTE_INT RBRACKET array1','array',7,'p_array','parser.py',169),
  ('array1 -> COL LBRACKET array2 RBRACKET','array1',4,'p_array1','parser.py',173),
  ('array1 -> empty','array1',1,'p_array1','parser.py',174),
  ('array2 -> cons','array2',1,'p_array2','parser.py',179),
  ('array2 -> cons COMMA array2','array2',3,'p_array2','parser.py',180),
  ('modulos -> prototipos se_uso COL bloque','modulos',4,'p_modulos','parser.py',185),
  ('se_uso -> <empty>','se_uso',0,'p_se_uso','parser.py',189),
  ('bloque -> estatutos bloque','bloque',2,'p_bloque','parser.py',205),
  ('bloque -> empty','bloque',1,'p_bloque','parser.py',206),
  ('estatutos -> condicion E_END','estatutos',2,'p_estatutos','parser.py',211),
  ('estatutos -> ciclo E_END','estatutos',2,'p_estatutos','parser.py',212),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',213),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',214),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',215),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',216),
  ('estatutos -> vars','estatutos',1,'p_estatutos','parser.py',217),
  ('ciclo -> while','ciclo',1,'p_ciclo','parser.py',222),
  ('ciclo -> for','ciclo',1,'p_ciclo','parser.py',223),
  ('condicion -> if','condicion',1,'p_condicion','parser.py',228),
  ('condicion -> switch','condicion',1,'p_condicion','parser.py',229),
  ('llamada -> ID LPAREN llamada1 RPAREN','llamada',4,'p_llamada','parser.py',234),
  ('llamada1 -> expresion','llamada1',1,'p_llamada1','parser.py',238),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',239),
  ('lectura -> RES_READ LPAREN tipo RPAREN','lectura',4,'p_lectura','parser.py',244),
  ('escritura -> RES_PRINT LPAREN escritura1 RPAREN','escritura',4,'p_escritura','parser.py',248),
  ('escritura1 -> expresion','escritura1',1,'p_escritura1','parser.py',252),
  ('escritura1 -> CTE_STRING','escritura1',1,'p_escritura1','parser.py',253),
  ('asignacion -> ID seen_id_asignacion','asignacion',2,'p_asignacion','parser.py',259),
  ('seen_id_asignacion -> EQUALS asignacion1','seen_id_asignacion',2,'p_seen_id_asignacion','parser.py',268),
  ('asignacion1 -> exp','asignacion1',1,'p_asignacion1','parser.py',273),
  ('asignacion1 -> asignlist','asignacion1',1,'p_asignacion1','parser.py',274),
  ('asignacion1 -> asignarray','asignacion1',1,'p_asignacion1','parser.py',275),
  ('asignlist -> LCURLY asignlist1 RCURLY','asignlist',3,'p_asignlist','parser.py',280),
  ('asignlist1 -> cons','asignlist1',1,'p_asignlist1','parser.py',284),
  ('asignlist1 -> cons COMMA asignlist1','asignlist1',3,'p_asignlist1','parser.py',285),
  ('asignarray -> LBRACKET asignarray1 RBRACKET','asignarray',3,'p_asignarray','parser.py',290),
  ('asignarray1 -> cons','asignarray1',1,'p_asignarray1','parser.py',294),
  ('asignarray1 -> cons COMMA asignarray1','asignarray1',3,'p_asignarray1','parser.py',295),
  ('while -> RES_WHILE LPAREN expresion RPAREN COL bloque','while',6,'p_while','parser.py',300),
  ('for -> RES_FOR LPAREN forexp RPAREN COL bloque','for',6,'p_for','parser.py',304),
  ('forexp -> ID EQUALS cons COL expresion COL ID EQUALS expresion','forexp',9,'p_forexp','parser.py',308),
  ('if -> RES_IF LPAREN expresion RPAREN COL bloque ifelse','if',7,'p_if','parser.py',323),
  ('ifelse -> RES_ELSE COL bloque','ifelse',3,'p_ifelse','parser.py',328),
  ('ifelse -> empty','ifelse',1,'p_ifelse','parser.py',329),
  ('switch -> RES_SWITCH COL switch2','switch',3,'p_switch','parser.py',334),
  ('switch2 -> RES_CASE expresion COL bloque switch2','switch2',5,'p_switch2','parser.py',338),
  ('switch2 -> empty','switch2',1,'p_switch2','parser.py',339),
  ('expresion -> exp expresion_1','expresion',2,'p_expresion','parser.py',344),
  ('expresion_1 -> MIN exp','expresion_1',2,'p_expresion_1','parser.py',348),
  ('expresion_1 -> MIN_EQ exp','expresion_1',2,'p_expresion_1','parser.py',349),
  ('expresion_1 -> MAY exp','expresion_1',2,'p_expresion_1','parser.py',350),
  ('expresion_1 -> MAY_EQ exp','expresion_1',2,'p_expresion_1','parser.py',351),
  ('expresion_1 -> DIF exp','expresion_1',2,'p_expresion_1','parser.py',352),
  ('expresion_1 -> EQ_EQ exp','expresion_1',2,'p_expresion_1','parser.py',353),
  ('expresion_1 -> empty','expresion_1',1,'p_expresion_1','parser.py',354),
  ('exp -> termino exp1','exp',2,'p_exp','parser.py',358),
  ('exp1 -> PLUS exp','exp1',2,'p_exp1','parser.py',363),
  ('exp1 -> MINUS exp','exp1',2,'p_exp1','parser.py',364),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',365),
  ('termino -> factor termino1','termino',2,'p_termino','parser.py',372),
  ('termino1 -> TIMES termino','termino1',2,'p_termino1','parser.py',377),
  ('termino1 -> DIVIDE termino','termino1',2,'p_termino1','parser.py',378),
  ('termino1 -> empty','termino1',1,'p_termino1','parser.py',379),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','parser.py',386),
  ('factor -> cons','factor',1,'p_factor','parser.py',387),
  ('factor -> PLUS cons','factor',2,'p_factor','parser.py',388),
  ('factor -> MINUS cons','factor',2,'p_factor','parser.py',389),
  ('cons -> ID exp_1','cons',2,'p_cons','parser.py',394),
  ('cons -> CTE_INT exp_2','cons',2,'p_cons','parser.py',395),
  ('cons -> CTE_FLOAT exp_3','cons',2,'p_cons','parser.py',396),
  ('cons -> CTE_DOUBLE','cons',1,'p_cons','parser.py',397),
  ('cons -> CTE_STRING','cons',1,'p_cons','parser.py',398),
  ('cons -> RES_TRUE','cons',1,'p_cons','parser.py',399),
  ('cons -> RES_FALSE','cons',1,'p_cons','parser.py',400),
  ('cons -> consarray','cons',1,'p_cons','parser.py',401),
  ('cons -> conslist','cons',1,'p_cons','parser.py',402),
  ('exp_1 -> <empty>','exp_1',0,'p_exp_1','parser.py',410),
  ('exp_2 -> <empty>','exp_2',0,'p_exp_2','parser.py',417),
  ('exp_3 -> <empty>','exp_3',0,'p_exp_3','parser.py',424),
  ('main -> RES_START comienza_main COL bloque RES_END','main',5,'p_main','parser.py',432),
  ('comienza_main -> <empty>','comienza_main',0,'p_comienza_main','parser.py',436),
  ('consarray -> ID LBRACKET CTE_INT RBRACKET EQUALS cons','consarray',6,'p_consarray','parser.py',444),
  ('conslist -> ID EQUALS LCURLY conslist1 RCURLY','conslist',5,'p_conslist','parser.py',448),
  ('conslist1 -> cons','conslist1',1,'p_conslist1','parser.py',452),
  ('conslist1 -> cons COMMA conslist1','conslist1',3,'p_conslist1','parser.py',453),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',458),
]
