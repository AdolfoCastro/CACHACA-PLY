
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'w\t\xf84\xf6\n\xf6?\xce\x01\xcf\xf88E\xac\xa8'
    
_lr_action_items = {'MIN':([14,33,34,45,83,85,86,87,88,89,124,126,127,157,158,163,170,196,197,198,199,200,232,236,241,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,-101,-105,166,-109,-100,-104,-110,-102,-103,-108,-107,-106,-119,244,-118,]),'RES_STRING':([8,11,14,24,26,28,29,30,33,34,41,45,46,50,51,53,83,84,85,86,87,88,89,93,106,112,113,118,222,232,241,],[16,16,-125,-20,16,16,-19,16,-124,-123,-125,-122,16,-28,16,-30,-114,-27,-115,-113,-116,-112,-111,-125,16,-29,-31,16,-37,-119,-118,]),'MAY_EQ':([14,33,34,45,83,85,86,87,88,89,124,126,127,157,158,163,170,196,197,198,199,200,232,236,241,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,-101,-105,168,-109,-100,-104,-110,-102,-103,-108,-107,-106,-119,246,-118,]),'RES_FUNC':([0,1,3,4,5,6,9,10,12,14,22,23,33,34,38,39,44,45,47,60,62,64,65,66,67,68,69,70,71,72,73,77,80,81,101,109,141,145,176,180,182,212,213,214,218,225,226,227,237,238,239,240,251,258,261,],[-125,-125,8,-4,-125,-6,-5,8,-8,-125,-7,-125,-124,-123,8,-21,-3,-122,-125,-52,-42,-55,-47,-57,-54,-51,-46,-56,-48,-45,-44,-50,-53,-49,-43,-125,-125,-117,-67,-90,-93,-58,-61,-92,-62,-125,-125,-125,-80,-88,-79,-125,-91,-125,-89,]),'LBRACKET':([55,89,104,191,254,],[97,111,131,223,111,]),'LCURLY':([54,104,110,],[95,132,146,]),'RES_FOR':([14,33,34,45,47,48,225,226,227,240,258,],[-125,-124,-123,-122,61,61,61,61,61,61,61,]),'RES_ELSE':([14,33,34,39,45,60,64,65,66,67,68,69,70,71,72,73,77,80,81,101,141,176,180,182,212,213,214,218,225,226,227,237,238,239,240,251,258,261,],[-125,-124,-123,-21,-122,-52,-55,-47,-57,-54,-51,-46,-56,-48,-45,-44,-50,-53,-49,-43,-125,-67,-90,-93,-58,-61,-92,-62,-125,-125,-125,-80,250,-79,-125,-91,-125,-89,]),'RES_END':([14,33,34,39,45,48,60,64,65,66,67,68,69,70,71,72,73,77,80,81,82,101,141,176,180,182,212,213,214,218,225,226,227,237,238,239,240,251,258,261,],[-125,-124,-123,-21,-122,-125,-52,-55,-47,-57,-54,-51,-46,-56,-48,-45,-44,-50,-53,-49,109,-43,-125,-67,-90,-93,-58,-61,-92,-62,-125,-125,-125,-80,-88,-79,-125,-91,-125,-89,]),'MINUS':([14,33,34,45,83,85,86,87,88,89,102,103,104,105,108,124,125,126,157,159,160,162,163,164,165,166,167,168,169,170,177,181,183,184,198,199,200,232,241,262,263,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,128,128,128,128,128,160,128,-105,-109,128,128,128,-104,128,128,128,128,128,128,-110,128,128,128,128,-108,-107,-106,-119,-118,128,128,]),'RES_IF':([14,33,34,45,47,48,225,226,227,240,258,],[-125,-124,-123,-122,63,63,63,63,63,63,63,]),'RES_PRINT':([14,33,34,45,47,48,225,226,227,240,258,],[-125,-124,-123,-122,79,79,79,79,79,79,79,]),'RES_START':([0,1,4,5,6,9,10,12,14,22,33,34,39,44,45,47,60,62,64,65,66,67,68,69,70,71,72,73,77,80,81,101,141,176,180,182,212,213,214,218,225,226,227,237,238,239,240,251,258,261,],[-125,-125,-4,-125,-6,-5,21,-8,-125,-7,-124,-123,-21,-3,-122,-125,-52,-42,-55,-47,-57,-54,-51,-46,-56,-48,-45,-44,-50,-53,-49,-43,-125,-67,-90,-93,-58,-61,-92,-62,-125,-125,-125,-80,-88,-79,-125,-91,-125,-89,]),'MIN_EQ':([14,33,34,45,83,85,86,87,88,89,124,126,127,157,158,163,170,196,197,198,199,200,232,236,241,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,-101,-105,165,-109,-100,-104,-110,-102,-103,-108,-107,-106,-119,247,-118,]),'RES_FLOAT':([8,11,14,24,26,28,29,30,33,34,41,45,46,50,51,53,83,84,85,86,87,88,89,93,106,112,113,118,222,232,241,],[19,19,-125,-20,19,19,-19,19,-124,-123,-125,-122,19,-28,19,-30,-114,-27,-115,-113,-116,-112,-111,-125,19,-29,-31,19,-37,-119,-118,]),'RES_DEF':([0,1,4,5,6,9,14,33,34,39,44,45,47,48,225,226,227,240,258,],[-125,-125,-4,11,-6,-5,-125,-124,-123,-21,-3,-122,11,11,11,11,11,11,11,]),'COL':([14,20,21,33,34,45,78,83,85,86,87,88,89,98,124,126,127,152,155,156,157,158,163,170,171,193,196,197,198,199,200,201,202,203,204,205,215,232,241,250,253,254,],[-125,36,37,-124,-123,-122,107,-114,-115,-113,-116,-112,-111,-9,-101,-105,-94,191,194,195,-109,-100,-104,-110,206,224,-102,-103,-108,-107,-106,-96,-95,-97,-98,-99,230,-119,-118,255,256,257,]),'RES_ARRAY':([11,14,24,26,29,33,34,41,45,46,50,51,53,83,84,85,86,87,88,89,93,106,112,113,118,222,232,241,],[30,-125,-20,30,-19,-124,-123,-125,-122,30,-28,30,-30,-114,-27,-115,-113,-116,-112,-111,-125,30,-29,-31,30,-37,-119,-118,]),'COMMA':([14,33,34,41,45,83,85,86,87,88,89,93,99,114,124,126,127,138,142,143,157,158,163,170,172,175,186,196,197,198,199,200,201,202,203,204,205,232,234,241,],[-125,-124,-123,52,-122,-114,-115,-113,-116,-112,-111,52,118,148,-101,-105,-94,177,183,184,-109,-100,-104,-110,207,210,219,-102,-103,-108,-107,-106,-96,-95,-97,-98,-99,-119,242,-118,]),'PLUS':([14,33,34,45,83,85,86,87,88,89,102,103,104,105,108,124,125,126,157,159,160,162,163,164,165,166,167,168,169,170,177,181,183,184,198,199,200,232,241,262,263,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,123,123,123,123,123,159,123,-105,-109,123,123,123,-104,123,123,123,123,123,123,-110,123,123,123,123,-108,-107,-106,-119,-118,123,123,]),'NEW_LINE':([7,13,14,24,25,26,29,31,32,33,34,36,37,39,40,41,44,45,47,48,50,51,53,54,60,62,64,65,66,67,68,69,70,71,72,73,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,101,107,109,112,113,124,126,127,130,133,134,135,136,137,141,145,151,152,157,158,163,170,176,178,179,180,182,185,190,192,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,212,213,214,218,220,222,225,226,227,230,232,233,237,238,239,240,241,243,251,255,258,261,],[14,-125,-125,-20,14,-22,-19,44,-4,45,-123,14,48,-21,-23,-125,-3,-122,-125,-125,-28,-125,-30,-125,-52,101,-55,-47,-57,-54,-51,-46,-56,-48,-45,-44,-50,-53,-49,101,-114,-27,-115,-113,-116,-112,-111,-24,-25,-26,-125,14,-33,-9,-43,14,-125,-29,-31,-101,-105,-94,-68,-72,-71,-69,-70,14,-125,45,-32,-125,-109,-100,-104,-110,-67,14,14,214,-93,14,14,-39,14,14,-102,-103,-108,-107,-106,-96,-95,-97,-98,-99,14,-76,-73,-58,-61,-92,-62,14,-37,-125,-125,-125,14,-119,14,101,101,101,-125,-118,-38,101,14,-125,101,]),'DIF':([14,33,34,45,83,85,86,87,88,89,124,126,127,157,158,163,170,196,197,198,199,200,232,236,241,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,-101,-105,169,-109,-100,-104,-110,-102,-103,-108,-107,-106,-119,249,-118,]),'$end':([0,2,4,12,14,22,23,33,34,38,39,45,47,60,62,64,65,66,67,68,69,70,71,72,73,77,80,81,101,109,141,145,176,180,182,212,213,214,218,225,226,227,237,238,239,240,251,258,261,],[-125,0,-2,-8,-125,-7,-125,-124,-123,-1,-21,-122,-125,-52,-42,-55,-47,-57,-54,-51,-46,-56,-48,-45,-44,-50,-53,-49,-43,-125,-125,-117,-67,-90,-93,-58,-61,-92,-62,-125,-125,-125,-80,-88,-79,-125,-91,-125,-89,]),'CTE_STRING':([49,95,104,108,123,128,131,132,146,148,154,183,184,207,210,219,221,223,242,244,245,246,247,248,249,],[83,83,83,143,83,83,83,83,83,83,83,143,143,83,83,83,83,83,83,-85,-83,-84,-86,83,-87,]),'DIVIDE':([14,33,34,45,83,85,86,87,88,89,126,157,170,198,232,241,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,162,-109,-110,-108,-119,-118,]),'EQUALS':([41,75,89,120,188,254,259,260,],[49,104,110,154,221,110,262,263,]),'TIMES':([14,33,34,45,83,85,86,87,88,89,126,157,170,198,232,241,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,164,-109,-110,-108,-119,-118,]),'RES_WHILE':([14,33,34,45,47,48,225,226,227,240,258,],[-125,-124,-123,-122,74,74,74,74,74,74,74,]),'LPAREN':([35,61,63,74,75,76,79,102,103,104,105,108,125,159,160,162,164,165,166,167,168,169,177,181,183,184,262,263,],[46,100,102,103,105,106,108,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'VAR':([14,15,16,17,19,27,33,34,43,45,47,48,52,104,225,226,227,240,258,],[-125,-13,-16,-15,-14,41,-124,-123,55,-122,75,75,93,135,75,75,75,75,75,]),'RPAREN':([14,15,16,17,19,24,29,33,34,45,56,58,59,83,85,86,87,88,89,99,113,117,119,121,122,124,126,127,129,138,139,140,142,143,144,153,157,158,161,163,170,196,197,198,199,200,201,202,203,204,205,211,216,217,222,232,241,264,265,],[-125,-13,-16,-15,-14,-20,-19,-124,-123,-122,98,-18,-17,-114,-115,-113,-116,-112,-111,-125,-31,-10,-12,155,156,-101,-105,-94,171,-59,178,179,-65,-66,185,-11,-109,-100,198,-104,-110,-102,-103,-108,-107,-106,-96,-95,-97,-98,-99,-60,-63,-64,-37,-119,-118,-82,-81,]),'CTE_INT':([49,95,97,104,111,123,128,131,132,146,148,154,207,210,219,221,223,242,244,245,246,247,248,249,],[88,88,116,88,147,88,88,88,88,88,88,88,88,88,88,88,88,88,-85,-83,-84,-86,88,-87,]),'ID':([14,15,16,17,18,19,24,29,33,34,42,45,49,57,58,59,95,100,104,113,123,128,131,132,146,148,154,207,210,219,221,222,223,224,242,244,245,246,247,248,249,256,257,],[-125,-13,-16,-15,35,-14,-20,-19,-124,-123,54,-122,89,99,-18,-17,89,120,89,-31,89,89,89,89,89,89,89,89,89,89,89,-37,89,236,89,-85,-83,-84,-86,254,-87,259,260,]),'RES_LIST':([11,14,24,26,29,33,34,41,45,46,50,51,53,83,84,85,86,87,88,89,93,106,112,113,118,222,232,241,],[28,-125,-20,28,-19,-124,-123,-125,-122,28,-28,28,-30,-114,-27,-115,-113,-116,-112,-111,-125,28,-29,-31,28,-37,-119,-118,]),'RES_INT':([8,11,14,24,26,28,29,30,33,34,41,45,46,50,51,53,83,84,85,86,87,88,89,93,106,112,113,118,222,232,241,],[15,15,-125,-20,15,15,-19,15,-124,-123,-125,-122,15,-28,15,-30,-114,-27,-115,-113,-116,-112,-111,-125,15,-29,-31,15,-37,-119,-118,]),'RES_READ':([14,33,34,45,47,48,225,226,227,240,258,],[-125,-124,-123,-122,76,76,76,76,76,76,76,]),'MAY':([14,33,34,45,83,85,86,87,88,89,124,126,127,157,158,163,170,196,197,198,199,200,232,236,241,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,-101,-105,167,-109,-100,-104,-110,-102,-103,-108,-107,-106,-119,245,-118,]),'RES_SWITCH':([14,33,34,45,47,48,225,226,227,240,258,],[-125,-124,-123,-122,78,78,78,78,78,78,78,]),'CTE_FLOAT':([49,95,104,123,128,131,132,146,148,154,207,210,219,221,223,242,244,245,246,247,248,249,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-85,-83,-84,-86,86,-87,]),'RES_BOOLEAN':([8,11,14,24,26,28,29,30,33,34,41,45,46,50,51,53,83,84,85,86,87,88,89,93,106,112,113,118,222,232,241,],[17,17,-125,-20,17,17,-19,17,-124,-123,-125,-122,17,-28,17,-30,-114,-27,-115,-113,-116,-112,-111,-125,17,-29,-31,17,-37,-119,-118,]),'RCURLY':([14,33,34,45,83,85,86,87,88,89,114,115,149,150,174,175,186,187,189,229,231,232,241,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,-125,151,-36,-34,209,-74,-120,220,-35,-75,-121,-119,-118,]),'RBRACKET':([14,33,34,45,83,85,86,87,88,89,116,147,172,173,228,232,234,235,241,252,],[-125,-124,-123,-122,-114,-115,-113,-116,-112,-111,152,188,-77,208,-78,-119,-40,243,-118,-41,]),'RES_PROTO':([0,13,14,33,34,45,],[3,3,-125,-124,-123,-122,]),'RES_CASE':([14,33,34,45,141,],[-125,-124,-123,-122,181,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prototipos':([3,10,38,],[7,20,20,]),'cons':([49,95,104,123,128,131,132,146,148,154,207,210,219,221,223,242,248,],[84,114,130,157,170,172,175,186,114,193,172,175,186,233,234,234,253,]),'prototipos_2':([99,],[117,]),'vars':([5,47,48,225,226,227,240,258,],[9,60,60,60,60,60,60,60,]),'prototipos_1':([46,118,],[56,153,]),'programa2':([1,],[5,]),'programa3':([5,23,],[10,38,]),'programa1':([0,13,],[1,31,]),'termino':([102,103,104,105,108,125,159,160,162,164,165,166,167,168,169,177,181,183,184,262,263,],[124,124,124,124,124,124,124,124,199,200,124,124,124,124,124,124,124,124,124,124,124,]),'vars1_1':([51,],[90,]),'forexp':([100,],[121,]),'array':([11,26,46,51,106,118,],[24,24,24,24,24,24,]),'llamada1':([105,177,],[139,211,]),'bloque':([47,48,225,226,227,240,258,],[62,82,237,238,239,251,261,]),'if':([47,48,225,226,227,240,258,],[64,64,64,64,64,64,64,]),'empty_lines':([14,109,],[33,145,]),'ciclo':([47,48,225,226,227,240,258,],[65,65,65,65,65,65,65,]),'tipo':([46,106,118,],[57,140,57,]),'llamada':([47,48,225,226,227,240,258,],[68,68,68,68,68,68,68,]),'array2':([223,242,],[235,252,]),'exp1':([124,],[158,]),'array1':([152,],[190,]),'vars1':([11,26,51,],[25,40,91,]),'while':([47,48,225,226,227,240,258,],[80,80,80,80,80,80,80,]),'vars3':([41,93,],[50,112,]),'vars2':([41,],[51,]),'estructura':([11,26,46,51,106,118,],[26,26,58,26,58,58,]),'condicion':([47,48,225,226,227,240,258,],[69,69,69,69,69,69,69,]),'ifelse':([47,48,225,226,227,240,258,],[70,70,70,70,70,70,70,]),'factor':([102,103,104,105,108,125,159,160,162,164,165,166,167,168,169,177,181,183,184,262,263,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'conslist1':([146,219,],[187,231,]),'main':([10,],[23,]),'lectura':([47,48,225,226,227,240,258,],[71,71,71,71,71,71,71,]),'empty':([0,1,5,13,14,23,41,47,48,51,54,93,99,109,114,141,152,225,226,227,240,258,],[4,6,12,32,34,12,53,72,72,92,96,53,119,34,149,182,192,72,72,72,72,72,]),'cons_loop':([95,148,],[115,189,]),'list1':([54,],[94,]),'asignlist':([104,],[134,]),'asignlist1':([132,210,],[174,229,]),'dato':([8,11,26,28,30,46,51,106,118,],[18,27,27,42,43,59,27,59,59,]),'estatutos':([47,48,225,226,227,240,258,],[73,73,73,73,73,73,73,]),'escritura1':([108,183,184,],[144,216,217,]),'termino1':([126,],[163,]),'expresion':([102,103,104,105,108,125,177,181,183,184,262,263,],[122,129,136,138,142,161,138,215,142,142,264,265,]),'asignarray':([104,],[133,]),'conslist':([49,95,104,123,128,131,132,146,148,154,207,210,219,221,223,242,248,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'for':([47,48,225,226,227,240,258,],[67,67,67,67,67,67,67,]),'asignacion':([47,48,225,226,227,240,258,],[77,77,77,77,77,77,77,]),'empty_lines_almost_one':([7,25,36,94,107,137,178,179,185,190,194,195,206,220,230,233,255,],[13,39,47,113,141,176,212,213,218,222,225,226,227,232,240,241,258,]),'switch':([47,48,225,226,227,240,258,],[66,66,66,66,66,66,66,]),'switch2':([141,],[180,]),'consarray':([49,95,104,123,128,131,132,146,148,154,207,210,219,221,223,242,248,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'list':([11,26,46,51,106,118,],[29,29,29,29,29,29,]),'modulos':([10,38,],[22,22,]),'programa':([0,],[2,]),'exp':([102,103,104,105,108,125,159,160,165,166,167,168,169,177,181,183,184,262,263,],[127,127,127,127,127,127,196,197,201,202,203,204,205,127,127,127,127,127,127,]),'comparacion':([236,],[248,]),'cons_loop_1':([114,],[150,]),'asignarray1':([131,207,],[173,228,]),'asignacion1':([104,],[137,]),'escritura':([47,48,225,226,227,240,258,],[81,81,81,81,81,81,81,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> programa1 programa2 programa3 main programa3','programa',5,'p_programa','parser.py',23),
  ('programa -> empty','programa',1,'p_programa','parser.py',24),
  ('programa1 -> RES_PROTO prototipos empty_lines_almost_one programa1 NEW_LINE','programa1',5,'p_programa1','parser.py',28),
  ('programa1 -> empty','programa1',1,'p_programa1','parser.py',29),
  ('programa2 -> programa2 vars','programa2',2,'p_programa2','parser.py',34),
  ('programa2 -> empty','programa2',1,'p_programa2','parser.py',35),
  ('programa3 -> programa3 modulos','programa3',2,'p_programa3','parser.py',40),
  ('programa3 -> empty','programa3',1,'p_programa3','parser.py',41),
  ('prototipos -> RES_FUNC dato ID LPAREN prototipos_1 RPAREN','prototipos',6,'p_prototipos','parser.py',46),
  ('prototipos_1 -> tipo ID prototipos_2','prototipos_1',3,'p_prototipos_1','parser.py',50),
  ('prototipos_2 -> COMMA prototipos_1','prototipos_2',2,'p_prototipos_2','parser.py',54),
  ('prototipos_2 -> empty','prototipos_2',1,'p_prototipos_2','parser.py',55),
  ('dato -> RES_INT','dato',1,'p_dato','parser.py',59),
  ('dato -> RES_FLOAT','dato',1,'p_dato','parser.py',60),
  ('dato -> RES_BOOLEAN','dato',1,'p_dato','parser.py',61),
  ('dato -> RES_STRING','dato',1,'p_dato','parser.py',62),
  ('tipo -> dato','tipo',1,'p_tipo','parser.py',67),
  ('tipo -> estructura','tipo',1,'p_tipo','parser.py',68),
  ('estructura -> list','estructura',1,'p_estructura','parser.py',73),
  ('estructura -> array','estructura',1,'p_estructura','parser.py',74),
  ('vars -> RES_DEF vars1 empty_lines_almost_one','vars',3,'p_vars','parser.py',79),
  ('vars1 -> estructura','vars1',1,'p_vars1','parser.py',83),
  ('vars1 -> estructura vars1','vars1',2,'p_vars1','parser.py',84),
  ('vars1 -> dato VAR vars2 vars1_1','vars1',4,'p_vars1','parser.py',85),
  ('vars1_1 -> vars1','vars1_1',1,'p_vars1_1','parser.py',90),
  ('vars1_1 -> empty','vars1_1',1,'p_vars1_1','parser.py',91),
  ('vars2 -> EQUALS cons','vars2',2,'p_vars2','parser.py',96),
  ('vars2 -> vars3','vars2',1,'p_vars2','parser.py',97),
  ('vars3 -> COMMA VAR vars3','vars3',3,'p_vars3','parser.py',102),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',103),
  ('list -> RES_LIST dato ID list1 empty_lines_almost_one','list',5,'p_list','parser.py',108),
  ('list1 -> LCURLY cons_loop RCURLY','list1',3,'p_list1','parser.py',112),
  ('list1 -> empty','list1',1,'p_list1','parser.py',113),
  ('cons_loop -> cons cons_loop_1','cons_loop',2,'p_cons_loop','parser.py',118),
  ('cons_loop_1 -> COMMA cons_loop','cons_loop_1',2,'p_cons_loop_1','parser.py',123),
  ('cons_loop_1 -> empty','cons_loop_1',1,'p_cons_loop_1','parser.py',124),
  ('array -> RES_ARRAY dato VAR LBRACKET CTE_INT RBRACKET array1 empty_lines_almost_one','array',8,'p_array','parser.py',127),
  ('array1 -> COL LBRACKET array2 RBRACKET','array1',4,'p_array1','parser.py',131),
  ('array1 -> empty','array1',1,'p_array1','parser.py',132),
  ('array2 -> cons','array2',1,'p_array2','parser.py',137),
  ('array2 -> cons COMMA array2','array2',3,'p_array2','parser.py',138),
  ('modulos -> prototipos COL empty_lines_almost_one bloque','modulos',4,'p_modulos','parser.py',143),
  ('bloque -> bloque NEW_LINE','bloque',2,'p_bloque','parser.py',147),
  ('bloque -> estatutos','bloque',1,'p_bloque','parser.py',148),
  ('bloque -> empty','bloque',1,'p_bloque','parser.py',149),
  ('estatutos -> condicion','estatutos',1,'p_estatutos','parser.py',154),
  ('estatutos -> ciclo','estatutos',1,'p_estatutos','parser.py',155),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',156),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',157),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',158),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',159),
  ('estatutos -> vars','estatutos',1,'p_estatutos','parser.py',160),
  ('ciclo -> while','ciclo',1,'p_ciclo','parser.py',165),
  ('ciclo -> for','ciclo',1,'p_ciclo','parser.py',166),
  ('condicion -> if','condicion',1,'p_condicion','parser.py',171),
  ('condicion -> ifelse','condicion',1,'p_condicion','parser.py',172),
  ('condicion -> switch','condicion',1,'p_condicion','parser.py',173),
  ('llamada -> VAR LPAREN llamada1 RPAREN empty_lines_almost_one','llamada',5,'p_llamada','parser.py',178),
  ('llamada1 -> expresion','llamada1',1,'p_llamada1','parser.py',182),
  ('llamada1 -> expresion COMMA llamada1','llamada1',3,'p_llamada1','parser.py',183),
  ('lectura -> RES_READ LPAREN tipo RPAREN empty_lines_almost_one','lectura',5,'p_lectura','parser.py',188),
  ('escritura -> RES_PRINT LPAREN escritura1 RPAREN empty_lines_almost_one','escritura',5,'p_escritura','parser.py',192),
  ('escritura1 -> expresion COMMA escritura1','escritura1',3,'p_escritura1','parser.py',196),
  ('escritura1 -> CTE_STRING COMMA escritura1','escritura1',3,'p_escritura1','parser.py',197),
  ('escritura1 -> expresion','escritura1',1,'p_escritura1','parser.py',198),
  ('escritura1 -> CTE_STRING','escritura1',1,'p_escritura1','parser.py',199),
  ('asignacion -> VAR EQUALS asignacion1 empty_lines_almost_one','asignacion',4,'p_asignacion','parser.py',204),
  ('asignacion1 -> cons','asignacion1',1,'p_asignacion1','parser.py',208),
  ('asignacion1 -> VAR','asignacion1',1,'p_asignacion1','parser.py',209),
  ('asignacion1 -> expresion','asignacion1',1,'p_asignacion1','parser.py',210),
  ('asignacion1 -> asignlist','asignacion1',1,'p_asignacion1','parser.py',211),
  ('asignacion1 -> asignarray','asignacion1',1,'p_asignacion1','parser.py',212),
  ('asignlist -> LCURLY asignlist1 RCURLY','asignlist',3,'p_asignlist','parser.py',217),
  ('asignlist1 -> cons','asignlist1',1,'p_asignlist1','parser.py',221),
  ('asignlist1 -> cons COMMA asignlist1','asignlist1',3,'p_asignlist1','parser.py',222),
  ('asignarray -> LBRACKET asignarray1 RBRACKET','asignarray',3,'p_asignarray','parser.py',227),
  ('asignarray1 -> cons','asignarray1',1,'p_asignarray1','parser.py',231),
  ('asignarray1 -> cons COMMA asignarray1','asignarray1',3,'p_asignarray1','parser.py',232),
  ('while -> RES_WHILE LPAREN expresion RPAREN COL empty_lines_almost_one bloque','while',7,'p_while','parser.py',237),
  ('for -> RES_FOR LPAREN forexp RPAREN COL empty_lines_almost_one bloque','for',7,'p_for','parser.py',241),
  ('forexp -> ID EQUALS cons COL ID comparacion ID COL ID EQUALS expresion','forexp',11,'p_forexp','parser.py',245),
  ('forexp -> ID EQUALS cons COL ID comparacion cons COL ID EQUALS expresion','forexp',11,'p_forexp','parser.py',246),
  ('comparacion -> MAY','comparacion',1,'p_comparacion','parser.py',251),
  ('comparacion -> MAY_EQ','comparacion',1,'p_comparacion','parser.py',252),
  ('comparacion -> MIN','comparacion',1,'p_comparacion','parser.py',253),
  ('comparacion -> MIN_EQ','comparacion',1,'p_comparacion','parser.py',254),
  ('comparacion -> DIF','comparacion',1,'p_comparacion','parser.py',255),
  ('if -> RES_IF LPAREN expresion RPAREN COL empty_lines_almost_one bloque','if',7,'p_if','parser.py',260),
  ('ifelse -> RES_IF LPAREN expresion RPAREN COL empty_lines_almost_one bloque RES_ELSE COL empty_lines_almost_one bloque','ifelse',11,'p_ifelse','parser.py',265),
  ('switch -> RES_SWITCH COL empty_lines_almost_one switch2','switch',4,'p_switch','parser.py',270),
  ('switch2 -> RES_CASE expresion COL empty_lines_almost_one bloque','switch2',5,'p_switch2','parser.py',274),
  ('switch2 -> switch2 NEW_LINE','switch2',2,'p_switch2','parser.py',275),
  ('switch2 -> empty','switch2',1,'p_switch2','parser.py',276),
  ('expresion -> exp','expresion',1,'p_expresion','parser.py',281),
  ('expresion -> exp MIN exp','expresion',3,'p_expresion','parser.py',282),
  ('expresion -> exp MIN_EQ exp','expresion',3,'p_expresion','parser.py',283),
  ('expresion -> exp MAY exp','expresion',3,'p_expresion','parser.py',284),
  ('expresion -> exp MAY_EQ exp','expresion',3,'p_expresion','parser.py',285),
  ('expresion -> exp DIF exp','expresion',3,'p_expresion','parser.py',286),
  ('exp -> termino exp1','exp',2,'p_exp','parser.py',291),
  ('exp -> termino','exp',1,'p_exp','parser.py',292),
  ('exp1 -> PLUS exp','exp1',2,'p_exp1','parser.py',297),
  ('exp1 -> MINUS exp','exp1',2,'p_exp1','parser.py',298),
  ('termino -> factor termino1','termino',2,'p_termino','parser.py',303),
  ('termino -> factor','termino',1,'p_termino','parser.py',304),
  ('termino1 -> TIMES termino','termino1',2,'p_termino1','parser.py',309),
  ('termino1 -> DIVIDE termino','termino1',2,'p_termino1','parser.py',310),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','parser.py',315),
  ('factor -> PLUS cons','factor',2,'p_factor','parser.py',316),
  ('factor -> MINUS cons','factor',2,'p_factor','parser.py',317),
  ('cons -> ID','cons',1,'p_cons','parser.py',322),
  ('cons -> CTE_INT','cons',1,'p_cons','parser.py',323),
  ('cons -> CTE_FLOAT','cons',1,'p_cons','parser.py',324),
  ('cons -> CTE_STRING','cons',1,'p_cons','parser.py',325),
  ('cons -> consarray','cons',1,'p_cons','parser.py',326),
  ('cons -> conslist','cons',1,'p_cons','parser.py',327),
  ('main -> RES_START COL NEW_LINE bloque RES_END empty_lines','main',6,'p_main','parser.py',332),
  ('consarray -> ID LBRACKET CTE_INT RBRACKET EQUALS cons empty_lines_almost_one','consarray',7,'p_consarray','parser.py',337),
  ('conslist -> ID EQUALS LCURLY conslist1 RCURLY empty_lines_almost_one','conslist',6,'p_conslist','parser.py',341),
  ('conslist1 -> cons','conslist1',1,'p_conslist1','parser.py',345),
  ('conslist1 -> cons COMMA conslist1','conslist1',3,'p_conslist1','parser.py',346),
  ('empty_lines -> empty_lines NEW_LINE','empty_lines',2,'p_empty_lines','parser.py',351),
  ('empty_lines -> empty','empty_lines',1,'p_empty_lines','parser.py',352),
  ('empty_lines_almost_one -> NEW_LINE empty_lines','empty_lines_almost_one',2,'p_empty_lines_almost_one','parser.py',357),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',361),
]
