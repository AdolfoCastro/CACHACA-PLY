
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x14\x14\xfcC\x0fc\x17\x9f\xcc\x83f\xc1\x1c=\xd6\x02'
    
_lr_action_items = {'MIN':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,147,149,151,154,174,175,176,177,200,206,210,212,215,228,233,251,252,253,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,-135,-132,-133,180,-166,-137,-166,-136,-163,-120,-122,-126,-128,-162,-139,-134,-121,-127,]),'RES_STRING':([7,25,29,31,32,34,35,36,43,52,54,55,57,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,115,116,117,118,121,122,134,140,143,168,170,200,228,248,],[12,12,-27,12,12,-26,12,12,-166,-166,-34,12,-36,-37,-39,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-166,12,-144,-142,-140,-143,-141,-35,12,-38,-166,-43,-45,-163,-162,-44,]),'EQ_EQ':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,147,149,151,154,174,175,176,177,200,206,210,212,215,228,233,251,252,253,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,-135,-132,-133,183,-166,-137,-166,-136,-163,-120,-122,-126,-128,-162,-139,-134,-121,-127,]),'RES_FUNC':([0,1,3,4,5,6,8,9,16,17,19,20,21,23,24,27,28,30,39,40,41,43,51,54,55,57,59,61,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,99,102,103,104,108,111,115,116,117,118,121,122,127,129,131,136,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,233,239,240,242,251,252,253,],[-166,-10,7,-6,-4,-7,-166,-166,-166,-11,-9,-6,-5,-8,-166,7,-13,-28,-166,-12,-29,-166,7,-34,-166,-36,-14,-166,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-48,-57,-54,-51,-166,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-50,-160,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,-139,-80,-77,-69,-134,-121,-127,]),'RES_DOUBLE':([7,25,29,31,32,34,35,36,43,52,54,55,57,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,115,116,117,118,121,122,134,140,143,168,170,200,228,248,],[13,13,-27,13,13,-26,13,13,-166,-166,-34,13,-36,-37,-39,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-166,13,-144,-142,-140,-143,-141,-35,13,-38,-166,-43,-45,-163,-162,-44,]),'LCURLY':([52,119,128,155,],[64,141,-70,189,]),'RES_FOR':([30,41,43,54,55,57,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,104,108,111,115,116,117,118,121,122,127,129,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,232,233,236,239,240,242,251,252,253,257,267,272,274,],[-28,-29,-166,-34,-166,-36,91,91,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,91,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,91,-139,91,-80,-77,-69,-134,-121,-127,91,-106,91,91,]),'RES_ELSE':([30,41,43,54,55,57,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,103,104,108,111,115,116,117,118,121,122,127,129,131,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,233,236,239,240,242,251,252,253,254,265,],[-28,-29,-166,-34,-166,-36,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,-51,-166,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-50,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,-139,-166,-80,-77,-69,-134,-121,-127,-100,270,]),'RES_END':([30,41,43,54,55,57,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,103,104,108,111,112,115,116,117,118,121,122,127,129,131,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,233,239,240,242,251,252,253,],[-28,-29,-166,-34,-166,-36,-166,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,-51,-166,-56,-55,136,-144,-142,-140,-143,-141,-35,-53,-52,-50,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,-139,-80,-77,-69,-134,-121,-127,]),'COL':([18,37,38,49,50,59,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,143,144,147,149,151,154,171,172,174,175,176,177,178,185,187,190,191,192,193,198,200,204,206,210,212,215,216,218,223,225,228,231,233,237,239,240,242,243,249,251,252,253,258,259,270,],[25,-49,-161,61,62,-14,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,169,-91,-135,-132,-133,-166,203,-88,-166,-137,-166,-136,-96,-119,-111,-76,-75,-74,-73,226,-163,232,-120,-122,-126,-128,236,-109,-71,-85,-162,-92,-139,-110,-80,-77,-69,257,261,-134,-121,-127,267,-108,274,]),'RES_IF':([30,41,43,54,55,57,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,104,108,111,115,116,117,118,121,122,127,129,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,232,233,236,239,240,242,251,252,253,257,267,272,274,],[-28,-29,-166,-34,-166,-36,93,93,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,93,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,93,-139,93,-80,-77,-69,-134,-121,-127,93,-106,93,93,]),'RES_PRINT':([30,41,43,54,55,57,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,104,108,111,115,116,117,118,121,122,127,129,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,232,233,236,239,240,242,251,252,253,257,267,272,274,],[-28,-29,-166,-34,-166,-36,101,101,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,101,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,101,-139,101,-80,-77,-69,-134,-121,-127,101,-106,101,101,]),'RES_START':([0,1,4,5,6,8,9,16,17,19,20,21,23,24,27,28,30,40,41,43,54,55,57,59,61,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,99,102,103,104,108,111,115,116,117,118,121,122,127,129,131,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,233,239,240,242,251,252,253,],[-166,-10,-6,-4,-7,-166,-166,-166,-11,-9,-6,-5,-8,-166,38,-13,-28,-12,-29,-166,-34,-166,-36,-14,-166,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-48,-57,-54,-51,-166,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-50,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,-139,-80,-77,-69,-134,-121,-127,]),'MIN_EQ':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,147,149,151,154,174,175,176,177,200,206,210,212,215,228,233,251,252,253,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,-135,-132,-133,179,-166,-137,-166,-136,-163,-120,-122,-126,-128,-162,-139,-134,-121,-127,]),'RES_FLOAT':([7,25,29,31,32,34,35,36,43,52,54,55,57,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,115,116,117,118,121,122,134,140,143,168,170,200,228,248,],[15,15,-27,15,15,-26,15,15,-166,-166,-34,15,-36,-37,-39,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-166,15,-144,-142,-140,-143,-141,-35,15,-38,-166,-43,-45,-163,-162,-44,]),'RES_ARRAY':([25,29,31,34,36,43,52,54,55,57,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,115,116,117,118,121,122,134,140,143,168,170,200,228,248,],[35,-27,35,-26,35,-166,-166,-34,35,-36,-37,-39,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-166,35,-144,-142,-140,-143,-141,-35,35,-38,-166,-43,-45,-163,-162,-44,]),'DIF':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,147,149,151,154,174,175,176,177,200,206,210,212,215,228,233,251,252,253,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,-135,-132,-133,186,-166,-137,-166,-136,-163,-120,-122,-126,-128,-162,-139,-134,-121,-127,]),'MINUS':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,126,128,133,135,147,148,149,151,155,157,173,174,175,176,177,179,180,181,182,183,184,186,200,203,207,208,209,211,212,213,214,215,217,228,233,234,235,245,251,253,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,150,-70,150,150,-135,-138,-132,-133,150,150,150,209,-137,-166,-136,-113,-112,-114,-115,-117,-118,-116,-163,150,-123,-125,-124,-130,-126,-131,-129,-128,150,-162,-139,150,150,150,-134,-127,]),'RES_DEF':([0,1,4,5,6,8,9,16,20,21,30,41,43,54,55,57,59,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,104,108,111,115,116,117,118,121,122,127,129,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,232,233,236,239,240,242,251,252,253,257,267,272,274,],[-166,-10,-6,-4,-7,18,-166,18,-6,-5,-28,-29,-166,-34,-166,-36,-14,18,18,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,18,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,18,-139,18,-80,-77,-69,-134,-121,-127,18,-106,18,18,]),'E_END':([30,41,43,54,55,57,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,94,95,97,98,99,100,102,103,104,108,110,111,115,116,117,118,121,122,127,129,131,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,226,228,232,233,236,239,240,242,244,246,250,251,252,253,254,257,262,263,264,266,267,269,271,272,274,275,276,277,278,279,],[-28,-29,-166,-34,-166,-36,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-61,127,-62,-60,-57,129,-54,-51,-166,-56,-59,-55,-144,-142,-140,-143,-141,-35,-53,-52,-50,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-166,-162,-166,-139,-166,-80,-77,-69,-102,-105,-93,-134,-121,-127,-166,-166,-87,-95,-99,-86,-106,-98,-83,-166,-166,-107,-101,-166,-97,-104,]),'COMMA':([43,60,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,113,115,116,117,118,121,165,200,219,222,228,229,],[56,88,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,56,137,-144,-142,-140,-143,-141,199,-163,238,241,-162,247,]),'PLUS':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,126,128,133,135,147,148,149,151,155,157,173,174,175,176,177,179,180,181,182,183,184,186,200,203,207,208,209,211,212,213,214,215,217,228,233,234,235,245,251,253,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,152,-70,152,152,-135,-138,-132,-133,152,152,152,207,-137,-166,-136,-113,-112,-114,-115,-117,-118,-116,-163,152,-123,-125,-124,-130,-126,-131,-129,-128,152,-162,-139,152,152,152,-134,-127,]),'RES_TRUE':([53,64,126,128,130,133,135,137,141,148,150,152,155,157,173,179,180,181,182,183,184,186,188,189,199,201,202,203,207,208,209,211,213,214,217,234,235,238,241,245,247,],[71,71,71,-70,71,71,71,71,71,-138,71,71,71,71,71,-113,-112,-114,-115,-117,-118,-116,71,71,71,71,71,71,-123,-125,-124,-130,-131,-129,71,71,71,71,71,71,71,]),'$end':([0,2,4,28,30,39,40,41,43,51,54,55,57,61,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,99,102,103,104,108,111,115,116,117,118,121,122,127,129,131,136,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,233,239,240,242,251,252,253,],[-166,0,-2,-13,-28,-166,-12,-29,-166,-1,-34,-166,-36,-166,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-48,-57,-54,-51,-166,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-50,-160,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,-139,-80,-77,-69,-134,-121,-127,]),'CTE_STRING':([53,64,126,128,130,133,135,137,141,148,150,152,155,157,173,179,180,181,182,183,184,186,188,189,199,201,202,203,207,208,209,211,213,214,217,234,235,238,241,245,247,],[72,72,72,-70,72,72,72,72,72,-138,72,72,72,72,72,-113,-112,-114,-115,-117,-118,-116,72,72,72,72,72,72,-123,-125,-124,-130,-131,-129,72,72,72,72,72,72,72,]),'DIVIDE':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,147,151,175,176,177,200,228,233,251,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,-135,-133,-137,211,-136,-163,-162,-139,-134,]),'CTE_DOUBLE':([53,64,126,128,130,133,135,137,141,148,150,152,155,157,173,179,180,181,182,183,184,186,188,189,199,201,202,203,207,208,209,211,213,214,217,234,235,238,241,245,247,],[74,74,74,-70,74,74,74,74,74,-138,74,74,74,74,74,-113,-112,-114,-115,-117,-118,-116,74,74,74,74,74,74,-123,-125,-124,-130,-131,-129,74,74,74,74,74,74,74,]),'EQUALS':([43,76,96,106,145,167,],[53,119,128,-72,-72,201,]),'TIMES':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,147,151,175,176,177,200,228,233,251,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,-135,-133,-137,214,-136,-163,-162,-139,-134,]),'RES_WHILE':([30,41,43,54,55,57,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,104,108,111,115,116,117,118,121,122,127,129,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,232,233,236,239,240,242,251,252,253,257,267,272,274,],[-28,-29,-166,-34,-166,-36,105,105,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,105,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,105,-139,105,-80,-77,-69,-134,-121,-127,105,-106,105,105,]),'LPAREN':([26,91,93,101,105,106,107,109,126,128,132,133,135,148,155,157,173,179,180,181,182,183,184,186,203,207,208,209,211,213,214,217,234,235,245,],[36,125,126,130,-84,133,134,135,148,-70,157,148,148,-138,148,148,148,-113,-112,-114,-115,-117,-118,-116,148,-123,-125,-124,-130,-131,-129,148,148,148,148,]),'RPAREN':([10,11,12,13,15,29,34,45,47,48,52,60,63,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,89,115,116,117,118,121,124,133,140,143,146,147,149,151,153,154,156,158,159,160,161,162,163,168,170,174,175,176,177,185,187,190,191,192,193,195,200,205,206,210,212,215,218,223,228,233,237,239,240,242,248,251,252,253,273,],[-22,-19,-23,-21,-20,-27,-26,59,-25,-24,-166,-166,-37,-39,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-16,-18,-144,-142,-140,-143,-141,-17,-166,-38,-166,172,-135,-132,-133,178,-166,194,196,-65,-64,197,198,-103,-43,-45,-166,-137,-166,-136,-119,-111,-76,-75,-74,-73,225,-163,233,-120,-122,-126,-128,-109,-71,-162,-139,-110,-80,-77,-69,-44,-134,-121,-127,-89,]),'CTE_INT':([53,64,86,120,126,128,130,133,135,137,141,148,150,152,155,157,173,179,180,181,182,183,184,186,188,189,199,201,202,203,207,208,209,211,213,214,217,234,235,238,241,245,247,],[75,75,123,142,75,-70,75,75,75,75,75,-138,75,75,75,75,75,-113,-112,-114,-115,-117,-118,-116,75,75,75,75,75,75,-123,-125,-124,-130,-131,-129,75,75,75,75,75,75,75,]),'ID':([10,11,12,13,14,15,22,29,30,33,34,41,42,43,44,46,47,48,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,104,108,111,115,116,117,118,121,122,125,126,127,128,129,130,133,135,137,140,141,143,147,148,149,150,151,152,155,157,168,170,173,174,175,176,177,179,180,181,182,183,184,186,188,189,190,191,192,193,194,196,197,199,200,201,202,203,206,207,208,209,210,211,212,213,214,215,217,223,224,228,232,233,234,235,236,238,239,240,241,242,245,247,248,251,252,253,257,261,267,268,272,274,],[-22,-19,-23,-21,-15,-20,26,-27,-28,43,-26,-29,52,-166,58,60,-25,-24,-166,76,-34,-166,85,-36,106,106,-37,76,-39,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,106,-56,-55,-144,-142,-140,-143,-141,-35,145,76,-53,-70,-52,76,76,76,76,-38,76,-166,-135,-138,-132,76,-133,76,76,76,-43,-45,76,-166,-137,-166,-136,-113,-112,-114,-115,-117,-118,-116,76,76,-76,-75,-74,-73,-68,-63,-66,76,-163,76,76,76,-120,-123,-125,-124,-122,-130,-126,-131,-129,-128,76,-71,-67,-162,106,-139,76,76,106,76,-80,-77,76,-69,76,76,-44,-134,-121,-127,106,-90,-106,145,106,106,]),'RES_LIST':([25,29,31,34,36,43,52,54,55,57,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,115,116,117,118,121,122,134,140,143,168,170,200,228,248,],[32,-27,32,-26,32,-166,-166,-34,32,-36,-37,-39,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-166,32,-144,-142,-140,-143,-141,-35,32,-38,-166,-43,-45,-163,-162,-44,]),'MAY_EQ':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,147,149,151,154,174,175,176,177,200,206,210,212,215,228,233,251,252,253,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,-135,-132,-133,182,-166,-137,-166,-136,-163,-120,-122,-126,-128,-162,-139,-134,-121,-127,]),'RES_INT':([7,25,29,31,32,34,35,36,43,52,54,55,57,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,115,116,117,118,121,122,134,140,143,168,170,200,228,248,],[11,11,-27,11,11,-26,11,11,-166,-166,-34,11,-36,-37,-39,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-166,11,-144,-142,-140,-143,-141,-35,11,-38,-166,-43,-45,-163,-162,-44,]),'RES_READ':([30,41,43,54,55,57,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,104,108,111,115,116,117,118,121,122,127,129,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,232,233,236,239,240,242,251,252,253,257,267,272,274,],[-28,-29,-166,-34,-166,-36,107,107,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,107,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,107,-139,107,-80,-77,-69,-134,-121,-127,107,-106,107,107,]),'MAY':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,147,149,151,154,174,175,176,177,200,206,210,212,215,228,233,251,252,253,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,-135,-132,-133,181,-166,-137,-166,-136,-163,-120,-122,-126,-128,-162,-139,-134,-121,-127,]),'RES_SWITCH':([30,41,43,54,55,57,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,104,108,111,115,116,117,118,121,122,127,129,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,228,232,233,236,239,240,242,251,252,253,257,267,272,274,],[-28,-29,-166,-34,-166,-36,109,109,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,109,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,-162,109,-139,109,-80,-77,-69,-134,-121,-127,109,-106,109,109,]),'CTE_FLOAT':([53,64,126,128,130,133,135,137,141,148,150,152,155,157,173,179,180,181,182,183,184,186,188,189,199,201,202,203,207,208,209,211,213,214,217,234,235,238,241,245,247,],[80,80,80,-70,80,80,80,80,80,-138,80,80,80,80,80,-113,-112,-114,-115,-117,-118,-116,80,80,80,80,80,80,-123,-125,-124,-130,-131,-129,80,80,80,80,80,80,80,]),'RES_FALSE':([53,64,126,128,130,133,135,137,141,148,150,152,155,157,173,179,180,181,182,183,184,186,188,189,199,201,202,203,207,208,209,211,213,214,217,234,235,238,241,245,247,],[81,81,81,-70,81,81,81,81,81,-138,81,81,81,81,81,-113,-112,-114,-115,-117,-118,-116,81,81,81,81,81,81,-123,-125,-124,-130,-131,-129,81,81,81,81,81,81,81,]),'RES_BOOLEAN':([7,25,29,31,32,34,35,36,43,52,54,55,57,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,115,116,117,118,121,122,134,140,143,168,170,200,228,248,],[10,10,-27,10,10,-26,10,10,-166,-166,-34,10,-36,-37,-39,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-166,10,-144,-142,-140,-143,-141,-35,10,-38,-166,-43,-45,-163,-162,-44,]),'RCURLY':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,113,114,115,116,117,118,121,138,139,164,165,166,200,221,222,227,228,256,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-166,140,-144,-142,-140,-143,-141,-42,-40,-41,-164,200,-163,240,-78,-165,-162,-79,]),'LBRACKET':([58,76,128,155,169,],[86,120,-70,188,202,]),'RBRACKET':([67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,115,116,117,118,121,123,142,200,219,220,228,229,230,255,260,],[-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-144,-142,-140,-143,-141,143,167,-163,-81,239,-162,-46,248,-82,-47,]),'RES_PROTO':([0,6,9,59,],[3,-7,3,-14,]),'RES_CASE':([30,41,43,54,55,57,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,99,102,103,104,108,111,115,116,117,118,121,122,127,129,131,147,149,151,174,175,176,177,190,191,192,193,194,196,197,200,206,210,212,215,223,224,226,228,233,239,240,242,251,252,253,267,272,275,277,],[-28,-29,-166,-34,-166,-36,-33,-145,-159,-157,-155,-148,-153,-158,-152,-154,-150,-156,-147,-146,-151,-149,-31,-30,-32,-166,-58,-57,-54,-51,-166,-56,-55,-144,-142,-140,-143,-141,-35,-53,-52,-50,-135,-132,-133,-166,-137,-166,-136,-76,-75,-74,-73,-68,-63,-66,-163,-120,-122,-126,-128,-71,-67,245,-162,-139,-80,-77,-69,-134,-121,-127,-106,-166,-107,245,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([8,16,61,62,104,232,236,257,272,274,],[16,16,90,90,90,90,90,90,90,90,]),'seen_prototipo':([6,],[9,]),'cuadruplo_est_if_else_2':([254,],[265,]),'exp_cons_int':([77,],[121,]),'bloque':([61,62,104,232,236,257,272,274,],[92,112,131,250,254,266,275,276,]),'exp_cons_float':([69,],[116,]),'entra_update':([261,],[268,]),'seen_string_cons':([53,64,126,130,133,135,137,141,150,152,155,157,173,188,189,199,201,202,203,217,234,235,238,241,245,247,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'vars2':([43,],[55,]),'estructura':([25,31,36,55,88,134,],[31,31,47,31,47,47,]),'factor':([126,133,135,155,157,173,203,217,234,235,245,],[151,151,151,151,151,151,151,151,151,151,151,]),'cuadruplo_est_for_1':([144,],[171,]),'cuadruplo_est_for_2':([231,],[249,]),'main':([27,],[39,]),'cuadruplo_est_while_2':([225,],[243,]),'list1':([52,],[63,]),'estatutos':([61,62,104,232,236,257,272,274,],[104,104,104,104,104,104,104,104,]),'expresion_1':([154,],[185,]),'insert_asignacion':([193,],[223,]),'expresion':([126,133,157,203,],[153,160,195,231,]),'se_uso':([37,],[49,]),'list':([25,31,36,55,88,134,],[34,34,34,34,34,34,]),'modulos':([27,51,],[40,40,]),'cuadruplo_exp_9_asignacion':([223,],[242,]),'cuadruplo_est_if_else_3':([276,],[278,]),'seen_case_3':([267,],[272,]),'ciclo':([61,62,104,232,236,257,272,274,],[95,95,95,95,95,95,95,95,]),'tipo':([36,88,134,],[46,46,161,]),'vars3':([43,85,],[54,122,]),'llamada':([61,62,104,232,236,257,272,274,],[99,99,99,99,99,99,99,99,]),'vars1':([25,31,55,],[30,41,82,]),'condicion':([61,62,104,232,236,257,272,274,],[100,100,100,100,100,100,100,100,]),'ifelse':([254,],[263,]),'cuadruplo_exp_4':([149,],[174,]),'lectura':([61,62,104,232,236,257,272,274,],[102,102,102,102,102,102,102,102,]),'cuadruplo_exp_9':([185,],[218,]),'cuadruplo_exp_8':([184,],[217,]),'seen_dato':([14,],[22,]),'cuadruplo_exp_5':([151,],[176,]),'generaglo':([5,],[8,]),'cuadruplo_exp_7':([233,],[251,]),'cuadruplo_exp_6':([148,],[173,]),'comienza_main':([38,],[50,]),'seen_id_cons':([53,64,126,130,133,135,137,141,150,152,155,157,173,188,189,199,201,202,203,217,234,235,238,241,245,247,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'conslist':([53,64,126,130,133,135,137,141,150,152,155,157,173,188,189,199,201,202,203,217,234,235,238,241,245,247,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'switch2':([226,277,],[244,279,]),'array2':([202,247,],[230,260,]),'cons_loop_1':([113,],[139,]),'asignarray1':([188,238,],[220,255,]),'escritura':([61,62,104,232,236,257,272,274,],[111,111,111,111,111,111,111,111,]),'asignlist1':([189,241,],[221,256,]),'cuadruplo_est_prnt':([194,],[224,]),'prototipos_2':([60,],[87,]),'prototipos_1':([36,88,],[45,124,]),'cuadruplos_exp_3':([213,],[235,]),'cuadruplos_exp_2':([208,],[234,]),'programa2':([8,16,],[17,23,]),'programa3':([24,39,],[27,51,]),'programa1':([0,9,],[1,21,]),'termino':([126,133,135,155,157,173,203,217,234,235,245,],[149,149,149,149,149,149,149,149,149,253,149,]),'array':([25,31,36,55,88,134,],[29,29,29,29,29,29,]),'valida_salir_gobal':([17,],[24,]),'cuadruplo_exp_8_asignacion':([128,],[155,]),'sale_update':([172,],[204,]),'asignarray':([155,],[190,]),'seen_float_cons':([53,64,126,130,133,135,137,141,150,152,155,157,173,188,189,199,201,202,203,217,234,235,238,241,245,247,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'exp1':([174,],[206,]),'array1':([143,],[168,]),'exp_cons_double':([73,],[118,]),'seen_case_4':([275,],[277,]),'asignlist':([155,],[191,]),'empty':([0,8,9,16,24,39,43,52,55,60,61,62,85,104,113,133,143,154,174,176,226,232,236,254,257,272,274,277,],[4,19,20,19,28,28,57,65,84,89,103,103,57,103,138,159,170,187,210,215,246,103,103,264,103,103,103,246,]),'see_operador_f':([176,],[213,]),'see_operador_e':([174,],[208,]),'seen_int_cons':([53,64,126,130,133,135,137,141,150,152,155,157,173,188,189,199,201,202,203,217,234,235,238,241,245,247,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'seen_exp_case':([245,],[258,]),'cuadruplo_est_for_3':([250,],[262,]),'asignacion':([61,62,104,125,232,236,257,268,272,274,],[108,108,108,144,108,108,108,273,108,108,]),'while':([61,62,104,232,236,257,272,274,],[110,110,110,110,110,110,110,110,]),'seen_exp_switch':([135,],[162,]),'see_rel':([154,],[184,]),'valida_entra_global':([1,],[5,]),'asignacion1':([155,],[193,]),'prototipos':([3,27,51,],[6,37,37,]),'cons':([53,64,126,130,133,135,137,141,150,152,155,157,173,188,189,199,201,202,203,217,234,235,238,241,245,247,],[66,113,147,156,147,147,113,165,175,177,147,147,147,219,222,165,228,229,147,147,147,147,219,222,147,229,]),'forexp':([125,],[146,]),'termino1':([176,],[212,]),'vars1_1':([55,],[83,]),'llamada1':([133,],[158,]),'if':([61,62,104,232,236,257,272,274,],[94,94,94,94,94,94,94,94,]),'seen_bool':([53,64,126,130,133,135,137,141,150,152,155,157,173,188,189,199,201,202,203,217,234,235,238,241,245,247,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'cuadruplo_est_while_1':([105,],[132,]),'cuadruplo_est_if_1':([178,],[216,]),'cuadruplo_est_while_3':([266,],[271,]),'exp_cons_string':([68,],[115,]),'seen_id_asignacion':([61,62,104,125,232,236,257,268,272,274,],[96,96,96,96,96,96,96,96,96,96,]),'conslist1':([141,199,],[166,227,]),'programa':([0,],[2,]),'seen_double_cons':([53,64,126,130,133,135,137,141,150,152,155,157,173,188,189,199,201,202,203,217,234,235,238,241,245,247,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'dato':([7,25,31,32,35,36,55,88,134,],[14,33,33,42,44,48,33,48,48,]),'cuadruplo_est_if_2':([264,],[269,]),'for':([61,62,104,232,236,257,272,274,],[98,98,98,98,98,98,98,98,]),'consarray':([53,64,126,130,133,135,137,141,150,152,155,157,173,188,189,199,201,202,203,217,234,235,238,241,245,247,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'switch':([61,62,104,232,236,257,272,274,],[97,97,97,97,97,97,97,97,]),'exp_1':([70,],[117,]),'cons_loop':([64,137,],[114,164,]),'exp':([126,133,135,155,157,173,203,217,234,245,],[154,154,163,192,154,205,154,237,252,259,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> programa1 valida_entra_global generaglo programa2 valida_salir_gobal programa3 main programa3','programa',8,'p_programa','parser.py',38),
  ('programa -> empty','programa',1,'p_programa','parser.py',39),
  ('prueba -> <empty>','prueba',0,'p_prueba','parser.py',43),
  ('generaglo -> <empty>','generaglo',0,'p_generaglo','parser.py',49),
  ('programa1 -> RES_PROTO prototipos seen_prototipo programa1','programa1',4,'p_programa1','parser.py',57),
  ('programa1 -> empty','programa1',1,'p_programa1','parser.py',58),
  ('seen_prototipo -> <empty>','seen_prototipo',0,'p_seen_prototipo','parser.py',62),
  ('programa2 -> vars programa2','programa2',2,'p_programa2','parser.py',69),
  ('programa2 -> empty','programa2',1,'p_programa2','parser.py',70),
  ('valida_entra_global -> <empty>','valida_entra_global',0,'p_valida_entra_global','parser.py',75),
  ('valida_salir_gobal -> <empty>','valida_salir_gobal',0,'p_valida_salir_gobal','parser.py',80),
  ('programa3 -> programa3 modulos','programa3',2,'p_programa3','parser.py',86),
  ('programa3 -> empty','programa3',1,'p_programa3','parser.py',87),
  ('prototipos -> RES_FUNC dato seen_dato ID LPAREN prototipos_1 RPAREN','prototipos',7,'p_prototipos','parser.py',92),
  ('seen_dato -> <empty>','seen_dato',0,'p_seen_dato','parser.py',98),
  ('prototipos_1 -> tipo ID prototipos_2','prototipos_1',3,'p_prototipos_1','parser.py',103),
  ('prototipos_2 -> COMMA prototipos_1','prototipos_2',2,'p_prototipos_2','parser.py',107),
  ('prototipos_2 -> empty','prototipos_2',1,'p_prototipos_2','parser.py',108),
  ('dato -> RES_INT','dato',1,'p_dato','parser.py',112),
  ('dato -> RES_FLOAT','dato',1,'p_dato','parser.py',113),
  ('dato -> RES_DOUBLE','dato',1,'p_dato','parser.py',114),
  ('dato -> RES_BOOLEAN','dato',1,'p_dato','parser.py',115),
  ('dato -> RES_STRING','dato',1,'p_dato','parser.py',116),
  ('tipo -> dato','tipo',1,'p_tipo','parser.py',123),
  ('tipo -> estructura','tipo',1,'p_tipo','parser.py',124),
  ('estructura -> list','estructura',1,'p_estructura','parser.py',129),
  ('estructura -> array','estructura',1,'p_estructura','parser.py',130),
  ('vars -> RES_DEF COL vars1','vars',3,'p_vars','parser.py',135),
  ('vars1 -> estructura vars1','vars1',2,'p_vars1','parser.py',141),
  ('vars1 -> dato ID vars2 vars1_1','vars1',4,'p_vars1','parser.py',142),
  ('vars1_1 -> vars1','vars1_1',1,'p_vars1_1','parser.py',199),
  ('vars1_1 -> empty','vars1_1',1,'p_vars1_1','parser.py',200),
  ('vars2 -> EQUALS cons','vars2',2,'p_vars2','parser.py',205),
  ('vars2 -> vars3','vars2',1,'p_vars2','parser.py',206),
  ('vars3 -> COMMA ID vars3','vars3',3,'p_vars3','parser.py',211),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',212),
  ('list -> RES_LIST dato ID list1','list',4,'p_list','parser.py',217),
  ('list1 -> LCURLY cons_loop RCURLY','list1',3,'p_list1','parser.py',221),
  ('list1 -> empty','list1',1,'p_list1','parser.py',222),
  ('cons_loop -> cons cons_loop_1','cons_loop',2,'p_cons_loop','parser.py',227),
  ('cons_loop_1 -> COMMA cons_loop','cons_loop_1',2,'p_cons_loop_1','parser.py',232),
  ('cons_loop_1 -> empty','cons_loop_1',1,'p_cons_loop_1','parser.py',233),
  ('array -> RES_ARRAY dato ID LBRACKET CTE_INT RBRACKET array1','array',7,'p_array','parser.py',236),
  ('array1 -> COL LBRACKET array2 RBRACKET','array1',4,'p_array1','parser.py',240),
  ('array1 -> empty','array1',1,'p_array1','parser.py',241),
  ('array2 -> cons','array2',1,'p_array2','parser.py',246),
  ('array2 -> cons COMMA array2','array2',3,'p_array2','parser.py',247),
  ('modulos -> prototipos se_uso COL bloque','modulos',4,'p_modulos','parser.py',252),
  ('se_uso -> <empty>','se_uso',0,'p_se_uso','parser.py',256),
  ('bloque -> estatutos bloque','bloque',2,'p_bloque','parser.py',272),
  ('bloque -> empty','bloque',1,'p_bloque','parser.py',273),
  ('estatutos -> condicion E_END','estatutos',2,'p_estatutos','parser.py',278),
  ('estatutos -> ciclo E_END','estatutos',2,'p_estatutos','parser.py',279),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',280),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',281),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',282),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',283),
  ('estatutos -> vars','estatutos',1,'p_estatutos','parser.py',284),
  ('ciclo -> while','ciclo',1,'p_ciclo','parser.py',289),
  ('ciclo -> for','ciclo',1,'p_ciclo','parser.py',290),
  ('condicion -> if','condicion',1,'p_condicion','parser.py',295),
  ('condicion -> switch','condicion',1,'p_condicion','parser.py',296),
  ('llamada -> ID LPAREN llamada1 RPAREN','llamada',4,'p_llamada','parser.py',301),
  ('llamada1 -> expresion','llamada1',1,'p_llamada1','parser.py',305),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',306),
  ('lectura -> RES_READ LPAREN tipo RPAREN','lectura',4,'p_lectura','parser.py',311),
  ('escritura -> RES_PRINT LPAREN cons RPAREN cuadruplo_est_prnt','escritura',5,'p_escritura','parser.py',315),
  ('cuadruplo_est_prnt -> <empty>','cuadruplo_est_prnt',0,'p_cuadruplo_est_prnt','parser.py',319),
  ('asignacion -> seen_id_asignacion EQUALS cuadruplo_exp_8_asignacion asignacion1 insert_asignacion cuadruplo_exp_9_asignacion','asignacion',6,'p_asignacion','parser.py',331),
  ('cuadruplo_exp_8_asignacion -> <empty>','cuadruplo_exp_8_asignacion',0,'p_cuadruplo_exp_8_asignacion','parser.py',335),
  ('cuadruplo_exp_9_asignacion -> <empty>','cuadruplo_exp_9_asignacion',0,'p_cuadruplo_exp_9_asignacion','parser.py',340),
  ('seen_id_asignacion -> ID','seen_id_asignacion',1,'p_seen_id_asignacion','parser.py',345),
  ('insert_asignacion -> <empty>','insert_asignacion',0,'p_insert_asignacion','parser.py',350),
  ('asignacion1 -> exp','asignacion1',1,'p_asignacion1','parser.py',360),
  ('asignacion1 -> asignlist','asignacion1',1,'p_asignacion1','parser.py',361),
  ('asignacion1 -> asignarray','asignacion1',1,'p_asignacion1','parser.py',362),
  ('asignlist -> LCURLY asignlist1 RCURLY','asignlist',3,'p_asignlist','parser.py',367),
  ('asignlist1 -> cons','asignlist1',1,'p_asignlist1','parser.py',371),
  ('asignlist1 -> cons COMMA asignlist1','asignlist1',3,'p_asignlist1','parser.py',372),
  ('asignarray -> LBRACKET asignarray1 RBRACKET','asignarray',3,'p_asignarray','parser.py',377),
  ('asignarray1 -> cons','asignarray1',1,'p_asignarray1','parser.py',381),
  ('asignarray1 -> cons COMMA asignarray1','asignarray1',3,'p_asignarray1','parser.py',382),
  ('while -> RES_WHILE cuadruplo_est_while_1 LPAREN expresion RPAREN cuadruplo_est_while_2 COL bloque cuadruplo_est_while_3','while',9,'p_while','parser.py',387),
  ('cuadruplo_est_while_1 -> <empty>','cuadruplo_est_while_1',0,'p_cuadruplo_est_while_1','parser.py',391),
  ('cuadruplo_est_while_2 -> <empty>','cuadruplo_est_while_2',0,'p_cuadruplo_est_while_2','parser.py',396),
  ('cuadruplo_est_while_3 -> <empty>','cuadruplo_est_while_3',0,'p_cuadruplo_est_while_3','parser.py',401),
  ('for -> RES_FOR LPAREN forexp RPAREN sale_update COL bloque cuadruplo_est_for_3','for',8,'p_for','parser.py',406),
  ('sale_update -> <empty>','sale_update',0,'p_sale_update','parser.py',410),
  ('forexp -> asignacion cuadruplo_est_for_1 COL expresion cuadruplo_est_for_2 COL entra_update asignacion','forexp',8,'p_forexp','parser.py',415),
  ('entra_update -> <empty>','entra_update',0,'p_entra_update','parser.py',420),
  ('cuadruplo_est_for_1 -> <empty>','cuadruplo_est_for_1',0,'p_cuadruplo_est_for_1','parser.py',431),
  ('cuadruplo_est_for_2 -> <empty>','cuadruplo_est_for_2',0,'p_cuadruplo_est_for_2','parser.py',436),
  ('cuadruplo_est_for_3 -> <empty>','cuadruplo_est_for_3',0,'p_cuadruplo_est_for_3','parser.py',441),
  ('cuadruplo_est_for_4 -> <empty>','cuadruplo_est_for_4',0,'p_cuadruplo_est_for_4','parser.py',446),
  ('if -> RES_IF LPAREN expresion RPAREN cuadruplo_est_if_1 COL bloque ifelse','if',8,'p_if','parser.py',461),
  ('cuadruplo_est_if_1 -> <empty>','cuadruplo_est_if_1',0,'p_cuadruplo_est_if_1','parser.py',466),
  ('ifelse -> cuadruplo_est_if_else_2 RES_ELSE COL bloque cuadruplo_est_if_else_3','ifelse',5,'p_ifelse','parser.py',471),
  ('ifelse -> empty cuadruplo_est_if_2','ifelse',2,'p_ifelse','parser.py',472),
  ('cuadruplo_est_if_2 -> <empty>','cuadruplo_est_if_2',0,'p_cuadruplo_est_if_2','parser.py',477),
  ('cuadruplo_est_if_else_2 -> <empty>','cuadruplo_est_if_else_2',0,'p_cuadruplo_est_if_else_2','parser.py',482),
  ('cuadruplo_est_if_else_3 -> <empty>','cuadruplo_est_if_else_3',0,'p_cuadruplo_est_if_else_3','parser.py',487),
  ('switch -> RES_SWITCH LPAREN seen_exp_switch RPAREN COL switch2','switch',6,'p_switch','parser.py',492),
  ('seen_exp_switch -> exp','seen_exp_switch',1,'p_seen_exp_switch','parser.py',496),
  ('switch2 -> RES_CASE seen_exp_case COL seen_case_3 bloque seen_case_4 switch2','switch2',7,'p_switch2','parser.py',500),
  ('switch2 -> empty','switch2',1,'p_switch2','parser.py',501),
  ('seen_case_3 -> <empty>','seen_case_3',0,'p_seen_case_3','parser.py',506),
  ('seen_case_4 -> <empty>','seen_case_4',0,'p_seen_case_4','parser.py',511),
  ('seen_exp_case -> exp','seen_exp_case',1,'p_seen_exp_case','parser.py',516),
  ('expresion -> exp expresion_1 cuadruplo_exp_9','expresion',3,'p_expresion','parser.py',521),
  ('expresion_1 -> see_rel cuadruplo_exp_8 exp','expresion_1',3,'p_expresion_1','parser.py',525),
  ('expresion_1 -> empty','expresion_1',1,'p_expresion_1','parser.py',526),
  ('see_rel -> MIN','see_rel',1,'p_see_rel','parser.py',531),
  ('see_rel -> MIN_EQ','see_rel',1,'p_see_rel','parser.py',532),
  ('see_rel -> MAY','see_rel',1,'p_see_rel','parser.py',533),
  ('see_rel -> MAY_EQ','see_rel',1,'p_see_rel','parser.py',534),
  ('see_rel -> DIF','see_rel',1,'p_see_rel','parser.py',535),
  ('see_rel -> EQ_EQ','see_rel',1,'p_see_rel','parser.py',536),
  ('cuadruplo_exp_8 -> <empty>','cuadruplo_exp_8',0,'p_cuadruplos_exp_8','parser.py',543),
  ('cuadruplo_exp_9 -> <empty>','cuadruplo_exp_9',0,'p_cuadruplos_exp_9','parser.py',549),
  ('exp -> termino cuadruplo_exp_4 exp1','exp',3,'p_exp','parser.py',554),
  ('exp1 -> see_operador_e cuadruplos_exp_2 exp','exp1',3,'p_exp1','parser.py',559),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',560),
  ('see_operador_e -> PLUS','see_operador_e',1,'p_see_operador_e','parser.py',565),
  ('see_operador_e -> MINUS','see_operador_e',1,'p_see_operador_e','parser.py',566),
  ('cuadruplos_exp_2 -> <empty>','cuadruplos_exp_2',0,'p_cuadruplos_exp_2','parser.py',573),
  ('termino -> factor cuadruplo_exp_5 termino1','termino',3,'p_termino','parser.py',579),
  ('termino1 -> see_operador_f cuadruplos_exp_3 termino','termino1',3,'p_termino1','parser.py',584),
  ('termino1 -> empty','termino1',1,'p_termino1','parser.py',585),
  ('see_operador_f -> TIMES','see_operador_f',1,'p_see_operador_f','parser.py',590),
  ('see_operador_f -> DIVIDE','see_operador_f',1,'p_see_operador_f','parser.py',591),
  ('cuadruplos_exp_3 -> <empty>','cuadruplos_exp_3',0,'p_cuadruplos_exp_3','parser.py',598),
  ('cuadruplo_exp_4 -> <empty>','cuadruplo_exp_4',0,'p_cuadruplo_exp_4','parser.py',604),
  ('cuadruplo_exp_5 -> <empty>','cuadruplo_exp_5',0,'p_cuadruplo_exp_5','parser.py',609),
  ('factor -> LPAREN cuadruplo_exp_6 exp RPAREN cuadruplo_exp_7','factor',5,'p_factor','parser.py',614),
  ('factor -> cons','factor',1,'p_factor','parser.py',615),
  ('factor -> PLUS cons','factor',2,'p_factor','parser.py',616),
  ('factor -> MINUS cons','factor',2,'p_factor','parser.py',617),
  ('cuadruplo_exp_6 -> <empty>','cuadruplo_exp_6',0,'p_cuadruplo_exp_6','parser.py',622),
  ('cuadruplo_exp_7 -> <empty>','cuadruplo_exp_7',0,'p_cuadruplo_exp_7','parser.py',627),
  ('cons -> seen_id_cons exp_1','cons',2,'p_cons','parser.py',632),
  ('cons -> seen_int_cons exp_cons_int','cons',2,'p_cons','parser.py',633),
  ('cons -> seen_float_cons exp_cons_float','cons',2,'p_cons','parser.py',634),
  ('cons -> seen_double_cons exp_cons_double','cons',2,'p_cons','parser.py',635),
  ('cons -> seen_string_cons exp_cons_string','cons',2,'p_cons','parser.py',636),
  ('cons -> seen_bool','cons',1,'p_cons','parser.py',637),
  ('cons -> consarray','cons',1,'p_cons','parser.py',638),
  ('cons -> conslist','cons',1,'p_cons','parser.py',639),
  ('seen_bool -> RES_TRUE','seen_bool',1,'p_seen_bool','parser.py',644),
  ('seen_bool -> RES_FALSE','seen_bool',1,'p_seen_bool','parser.py',645),
  ('seen_id_cons -> ID','seen_id_cons',1,'p_seen_id_cons','parser.py',656),
  ('seen_float_cons -> CTE_FLOAT','seen_float_cons',1,'p_seen_float_cons','parser.py',663),
  ('seen_double_cons -> CTE_DOUBLE','seen_double_cons',1,'p_seen_double_cons','parser.py',671),
  ('seen_string_cons -> CTE_STRING','seen_string_cons',1,'p_seen_string_cons','parser.py',679),
  ('seen_int_cons -> CTE_INT','seen_int_cons',1,'p_seen_int_cons','parser.py',687),
  ('exp_1 -> <empty>','exp_1',0,'p_exp_1','parser.py',695),
  ('exp_cons_int -> <empty>','exp_cons_int',0,'p_exp_cons_int','parser.py',703),
  ('exp_cons_float -> <empty>','exp_cons_float',0,'p_exp_cons_float','parser.py',713),
  ('exp_cons_double -> <empty>','exp_cons_double',0,'p_exp_cons_double','parser.py',723),
  ('exp_cons_string -> <empty>','exp_cons_string',0,'p_exp_cons_string','parser.py',733),
  ('main -> RES_START comienza_main COL bloque RES_END','main',5,'p_main','parser.py',743),
  ('comienza_main -> <empty>','comienza_main',0,'p_comienza_main','parser.py',747),
  ('consarray -> ID LBRACKET CTE_INT RBRACKET EQUALS cons','consarray',6,'p_consarray','parser.py',755),
  ('conslist -> ID EQUALS LCURLY conslist1 RCURLY','conslist',5,'p_conslist','parser.py',759),
  ('conslist1 -> cons','conslist1',1,'p_conslist1','parser.py',763),
  ('conslist1 -> cons COMMA conslist1','conslist1',3,'p_conslist1','parser.py',764),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',769),
]
