
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb1\xed\xbaXhb\x06\xd6\x0e/\x99Z=\xafd\x96'
    
_lr_action_items = {'MIN':([98,100,101,102,103,104,105,106,107,118,120,122,125,126,147,154,157,158,160,162,163,191,192,193,194,195,224,233,],[-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,-123,-123,166,-111,-107,-95,-98,-106,-99,-102,-105,-103,-96,-97,-101,-100,-120,-119,]),'RES_STRING':([7,29,34,36,37,39,40,41,46,74,76,77,79,92,95,97,98,99,100,101,102,103,104,105,106,107,111,114,147,148,185,188,213,215,224,233,239,],[13,13,-25,13,13,-24,13,13,-123,-123,-32,13,-34,13,-35,-37,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-123,13,-107,-33,-36,-123,-41,-43,-120,-119,-42,]),'EQ_EQ':([98,100,101,102,103,104,105,106,107,118,120,122,125,126,147,154,157,158,160,162,163,191,192,193,194,195,224,233,],[-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,-123,-123,169,-111,-107,-95,-98,-106,-99,-102,-105,-103,-96,-97,-101,-100,-120,-119,]),'RES_FUNC':([1,3,5,6,8,9,10,17,18,20,21,22,23,27,28,33,35,42,44,46,52,54,60,63,64,65,69,72,76,77,79,81,85,86,88,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,191,192,193,194,195,205,206,224,233,],[-3,7,-123,-5,-123,-9,-123,-8,7,-11,-6,-4,-7,-10,-123,7,-26,-123,-27,-123,-56,-46,-55,-52,-49,-123,-54,-53,-32,-123,-34,-12,-51,-50,-48,-117,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,-103,-96,-97,-101,-100,-75,-72,-120,-119,]),'RES_DOUBLE':([7,29,34,36,37,39,40,41,46,74,76,77,79,92,95,97,98,99,100,101,102,103,104,105,106,107,111,114,147,148,185,188,213,215,224,233,239,],[14,14,-25,14,14,-24,14,14,-123,-123,-32,14,-34,14,-35,-37,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-123,14,-107,-33,-36,-123,-41,-43,-120,-119,-42,]),'LCURLY':([74,90,145,],[96,131,186,]),'RES_FOR':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,190,191,192,193,194,195,196,203,205,206,208,224,233,237,],[-26,53,53,-27,-123,-56,-55,-52,53,-54,-53,-32,-123,-34,-51,-50,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,53,-103,-96,-97,-101,-100,53,53,-75,-72,53,-120,-119,53,]),'RES_ELSE':([35,44,46,52,60,63,64,65,69,72,76,77,79,85,86,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,191,192,193,194,195,196,205,206,218,224,233,],[-26,-27,-123,-56,-55,-52,-49,-123,-54,-53,-32,-123,-34,-51,-50,-48,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,-103,-96,-97,-101,-100,-123,-75,-72,228,-120,-119,]),'RES_END':([35,43,44,46,52,60,63,64,65,69,72,73,76,77,79,85,86,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,191,192,193,194,195,205,206,224,233,],[-26,-123,-27,-123,-56,-55,-52,-49,-123,-54,-53,94,-32,-123,-34,-51,-50,-48,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,-103,-96,-97,-101,-100,-75,-72,-120,-119,]),'COL':([19,25,26,31,32,70,81,98,100,101,102,103,104,105,106,107,118,120,122,125,147,152,154,157,158,160,162,163,164,170,172,174,181,188,189,191,192,193,194,195,197,198,199,200,201,202,224,227,228,233,],[29,-47,-118,42,43,93,-12,-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,-123,-123,-123,-107,190,-95,-98,-106,-99,-102,-105,196,-87,-94,203,208,214,216,-103,-96,-97,-101,-100,-89,-88,-90,-91,-93,-92,-120,236,237,-119,]),'RES_IF':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,190,191,192,193,194,195,196,203,205,206,208,224,233,237,],[-26,55,55,-27,-123,-56,-55,-52,55,-54,-53,-32,-123,-34,-51,-50,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,55,-103,-96,-97,-101,-100,55,55,-75,-72,55,-120,-119,55,]),'RES_PRINT':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,190,191,192,193,194,195,196,203,205,206,208,224,233,237,],[-26,62,62,-27,-123,-56,-55,-52,62,-54,-53,-32,-123,-34,-51,-50,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,62,-103,-96,-97,-101,-100,62,62,-75,-72,62,-120,-119,62,]),'RES_START':([1,5,6,8,9,10,17,18,20,21,22,23,27,35,42,44,46,52,54,60,63,64,65,69,72,76,77,79,81,85,86,88,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,191,192,193,194,195,205,206,224,233,],[-3,-123,-5,-123,-9,-123,-8,26,-11,-6,-4,-7,-10,-26,-123,-27,-123,-56,-46,-55,-52,-49,-123,-54,-53,-32,-123,-34,-12,-51,-50,-48,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,-103,-96,-97,-101,-100,-75,-72,-120,-119,]),'MIN_EQ':([98,100,101,102,103,104,105,106,107,118,120,122,125,126,147,154,157,158,160,162,163,191,192,193,194,195,224,233,],[-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,-123,-123,165,-111,-107,-95,-98,-106,-99,-102,-105,-103,-96,-97,-101,-100,-120,-119,]),'RES_FLOAT':([7,29,34,36,37,39,40,41,46,74,76,77,79,92,95,97,98,99,100,101,102,103,104,105,106,107,111,114,147,148,185,188,213,215,224,233,239,],[16,16,-25,16,16,-24,16,16,-123,-123,-32,16,-34,16,-35,-37,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-123,16,-107,-33,-36,-123,-41,-43,-120,-119,-42,]),'RES_ARRAY':([29,34,36,39,41,46,74,76,77,79,92,95,97,98,99,100,101,102,103,104,105,106,107,111,114,147,148,185,188,213,215,224,233,239,],[40,-25,40,-24,40,-123,-123,-32,40,-34,40,-35,-37,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-123,40,-107,-33,-36,-123,-41,-43,-120,-119,-42,]),'DIF':([98,100,101,102,103,104,105,106,107,118,120,122,125,126,147,154,157,158,160,162,163,191,192,193,194,195,224,233,],[-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,-123,-123,171,-111,-107,-95,-98,-106,-99,-102,-105,-103,-96,-97,-101,-100,-120,-119,]),'MINUS':([84,87,89,90,91,98,100,101,102,103,104,105,106,107,118,119,120,122,126,141,147,155,156,158,159,160,161,162,163,165,166,167,168,169,171,191,194,195,216,224,233,243,],[121,121,121,121,121,-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,121,156,-123,-111,121,-107,121,121,-106,121,-99,121,-102,-105,121,121,121,121,121,121,-103,-101,-100,121,-120,-119,121,]),'RES_DEF':([1,5,6,8,9,10,17,21,22,23,35,42,43,44,46,52,60,63,65,69,72,76,77,79,81,85,86,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,190,191,192,193,194,195,196,203,205,206,208,224,233,237,],[-3,-123,-5,19,-9,-123,-8,-6,-4,-7,-26,19,19,-27,-123,-56,-55,-52,19,-54,-53,-32,-123,-34,-12,-51,-50,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,19,-103,-96,-97,-101,-100,19,19,-75,-72,19,-120,-119,19,]),'E_END':([35,44,46,52,56,57,58,59,60,61,63,64,65,69,71,72,76,77,79,85,86,88,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,140,142,147,148,154,157,158,160,162,163,173,179,180,190,191,192,193,194,195,196,203,205,206,208,217,218,219,222,224,229,230,231,233,237,241,],[-26,-27,-123,-56,-59,85,-60,-58,-55,86,-52,-49,-123,-54,-57,-53,-32,-123,-34,-51,-50,-48,-123,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-84,-86,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,-123,-103,-96,-97,-101,-100,-123,-123,-75,-72,-123,-79,-123,-78,-123,-120,-81,-83,-85,-119,-123,-82,]),'COMMA':([46,82,98,100,101,102,103,104,105,106,107,111,143,147,175,178,210,224,233,234,],[78,114,-111,-110,-114,-109,-112,-115,-108,-116,-113,78,182,-107,204,207,223,-120,-119,238,]),'PLUS':([84,87,89,90,91,98,100,101,102,103,104,105,106,107,118,119,120,122,126,141,147,155,156,158,159,160,161,162,163,165,166,167,168,169,171,191,194,195,216,224,233,243,],[123,123,123,123,123,-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,123,155,-123,-111,123,-107,123,123,-106,123,-99,123,-102,-105,123,123,123,123,123,123,-103,-101,-100,123,-120,-119,123,]),'RES_TRUE':([75,84,87,89,90,91,96,119,121,123,130,131,141,151,155,156,159,161,165,166,167,168,169,171,182,186,204,207,216,223,225,226,238,243,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'$end':([0,2,4,20,27,28,33,35,42,44,46,52,54,60,63,64,65,69,72,76,77,79,85,86,88,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,191,192,193,194,195,205,206,224,233,],[-123,0,-2,-11,-10,-123,-1,-26,-123,-27,-123,-56,-46,-55,-52,-49,-123,-54,-53,-32,-123,-34,-51,-50,-48,-117,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,-103,-96,-97,-101,-100,-75,-72,-120,-119,]),'CTE_STRING':([75,84,87,89,90,91,96,119,121,123,130,131,141,151,155,156,159,161,165,166,167,168,169,171,182,186,204,207,216,223,225,226,238,243,],[98,98,126,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'DIVIDE':([98,100,101,102,103,104,105,106,107,118,122,126,147,158,163,191,224,233,],[-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,159,-111,-107,-106,-105,-103,-120,-119,]),'CTE_DOUBLE':([75,84,87,89,90,91,96,119,121,123,130,131,141,151,155,156,159,161,165,166,167,168,169,171,182,186,204,207,216,223,225,226,238,243,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'EQUALS':([46,67,106,116,212,240,],[75,90,145,151,225,243,]),'TIMES':([98,100,101,102,103,104,105,106,107,118,122,126,147,158,163,191,224,233,],[-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,161,-111,-107,-106,-105,-103,-120,-119,]),'RES_WHILE':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,190,191,192,193,194,195,196,203,205,206,208,224,233,237,],[-26,66,66,-27,-123,-56,-55,-52,66,-54,-53,-32,-123,-34,-51,-50,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,66,-103,-96,-97,-101,-100,66,66,-75,-72,66,-120,-119,66,]),'LPAREN':([30,53,55,62,66,67,68,84,87,89,90,91,119,141,155,156,159,161,165,166,167,168,169,171,216,243,],[41,83,84,87,89,91,92,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'RPAREN':([11,12,13,14,16,34,39,48,50,51,74,82,91,95,97,98,100,101,102,103,104,105,106,107,113,115,117,118,120,122,124,125,126,127,128,129,136,137,138,139,147,150,153,154,157,158,160,162,163,170,172,185,188,191,192,193,194,195,197,198,199,200,201,202,213,215,224,233,239,244,],[-20,-17,-21,-19,-18,-25,-24,81,-23,-22,-123,-123,-123,-35,-37,-111,-110,-114,-109,-112,-115,-108,-116,-113,-14,-16,152,-104,-123,-123,164,-123,-67,173,-66,174,179,-63,-62,180,-107,-15,191,-95,-98,-106,-99,-102,-105,-87,-94,-36,-123,-103,-96,-97,-101,-100,-89,-88,-90,-91,-93,-92,-41,-43,-120,-119,-42,-80,]),'CTE_INT':([75,84,87,89,90,91,96,112,119,121,123,130,131,141,146,151,155,156,159,161,165,166,167,168,169,171,182,186,204,207,216,223,225,226,238,243,],[105,105,105,105,105,105,105,149,105,105,105,105,105,105,187,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'ID':([11,12,13,14,15,16,24,34,35,38,39,42,43,44,45,46,47,49,50,51,52,60,63,65,69,72,74,75,76,77,78,79,83,84,85,86,87,89,90,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,120,121,122,123,130,131,132,133,134,135,141,147,148,151,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,171,173,179,180,182,185,186,188,190,191,192,193,194,195,196,203,204,205,206,207,208,213,215,216,223,224,225,226,233,236,237,238,239,243,],[-20,-17,-21,-19,-13,-18,30,-25,-26,46,-24,67,67,-27,74,-123,80,82,-23,-22,-56,-55,-52,67,-54,-53,-123,106,-32,-123,111,-34,116,106,-51,-50,106,106,106,106,-35,106,-37,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,106,-123,106,-123,106,106,106,-71,-70,-69,-68,106,-107,-33,106,-95,106,106,-98,-106,106,-99,106,-102,-105,106,106,106,106,106,106,-65,-61,-64,106,-36,106,-123,67,-103,-96,-97,-101,-100,67,67,106,-75,-72,106,67,-41,-43,106,106,-120,106,106,-119,240,67,106,-42,106,]),'RES_LIST':([29,34,36,39,41,46,74,76,77,79,92,95,97,98,99,100,101,102,103,104,105,106,107,111,114,147,148,185,188,213,215,224,233,239,],[37,-25,37,-24,37,-123,-123,-32,37,-34,37,-35,-37,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-123,37,-107,-33,-36,-123,-41,-43,-120,-119,-42,]),'MAY_EQ':([98,100,101,102,103,104,105,106,107,118,120,122,125,126,147,154,157,158,160,162,163,191,192,193,194,195,224,233,],[-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,-123,-123,168,-111,-107,-95,-98,-106,-99,-102,-105,-103,-96,-97,-101,-100,-120,-119,]),'RES_INT':([7,29,34,36,37,39,40,41,46,74,76,77,79,92,95,97,98,99,100,101,102,103,104,105,106,107,111,114,147,148,185,188,213,215,224,233,239,],[12,12,-25,12,12,-24,12,12,-123,-123,-32,12,-34,12,-35,-37,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-123,12,-107,-33,-36,-123,-41,-43,-120,-119,-42,]),'RES_READ':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,190,191,192,193,194,195,196,203,205,206,208,224,233,237,],[-26,68,68,-27,-123,-56,-55,-52,68,-54,-53,-32,-123,-34,-51,-50,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,68,-103,-96,-97,-101,-100,68,68,-75,-72,68,-120,-119,68,]),'MAY':([98,100,101,102,103,104,105,106,107,118,120,122,125,126,147,154,157,158,160,162,163,191,192,193,194,195,224,233,],[-111,-110,-114,-109,-112,-115,-108,-116,-113,-104,-123,-123,167,-111,-107,-95,-98,-106,-99,-102,-105,-103,-96,-97,-101,-100,-120,-119,]),'RES_SWITCH':([35,42,43,44,46,52,60,63,65,69,72,76,77,79,85,86,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,190,191,192,193,194,195,196,203,205,206,208,224,233,237,],[-26,70,70,-27,-123,-56,-55,-52,70,-54,-53,-32,-123,-34,-51,-50,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,70,-103,-96,-97,-101,-100,70,70,-75,-72,70,-120,-119,70,]),'CTE_FLOAT':([75,84,87,89,90,91,96,119,121,123,130,131,141,151,155,156,159,161,165,166,167,168,169,171,182,186,204,207,216,223,225,226,238,243,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'RES_FALSE':([75,84,87,89,90,91,96,119,121,123,130,131,141,151,155,156,159,161,165,166,167,168,169,171,182,186,204,207,216,223,225,226,238,243,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'RES_BOOLEAN':([7,29,34,36,37,39,40,41,46,74,76,77,79,92,95,97,98,99,100,101,102,103,104,105,106,107,111,114,147,148,185,188,213,215,224,233,239,],[11,11,-25,11,11,-24,11,11,-123,-123,-32,11,-34,11,-35,-37,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-123,11,-107,-33,-36,-123,-41,-43,-120,-119,-42,]),'RCURLY':([98,100,101,102,103,104,105,106,107,143,144,147,177,178,183,184,209,210,211,221,224,232,233,],[-111,-110,-114,-109,-112,-115,-108,-116,-113,-123,185,-107,206,-73,-40,-38,-39,-121,224,-74,-120,-122,-119,]),'LBRACKET':([80,90,106,214,],[112,130,146,226,]),'RBRACKET':([98,100,101,102,103,104,105,106,107,147,149,175,176,187,220,224,233,234,235,242,],[-111,-110,-114,-109,-112,-115,-108,-116,-113,-107,188,-76,205,212,-77,-120,-119,-44,239,-45,]),'RES_PROTO':([0,6,10,81,],[3,-5,3,-12,]),'RES_CASE':([35,44,46,52,60,63,64,65,69,72,76,77,79,85,86,88,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,120,122,132,133,134,135,147,148,154,157,158,160,162,163,173,179,180,191,192,193,194,195,205,206,208,222,224,233,],[-26,-27,-123,-56,-55,-52,-49,-123,-54,-53,-32,-123,-34,-51,-50,-48,141,-111,-31,-110,-114,-109,-112,-115,-108,-116,-113,-29,-28,-30,-123,-104,-123,-123,-71,-70,-69,-68,-107,-33,-95,-98,-106,-99,-102,-105,-65,-61,-64,-103,-96,-97,-101,-100,-75,-72,-123,141,-120,-119,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prototipos':([3,18,33,],[6,25,25,]),'bloque':([42,43,65,190,196,203,208,237,],[54,73,88,217,218,219,222,241,]),'cons':([75,84,87,89,90,91,96,119,121,123,130,131,141,151,155,156,159,161,165,166,167,168,169,171,182,186,204,207,216,223,225,226,238,243,],[99,118,118,118,118,118,143,118,158,163,175,178,118,189,118,118,118,118,118,118,118,118,118,118,143,210,175,178,118,210,233,234,234,118,]),'prototipos_2':([82,],[113,]),'vars':([8,42,43,65,190,196,203,208,237,],[17,52,52,52,52,52,52,52,52,]),'prototipos_1':([41,114,],[48,150,]),'programa2':([5,],[8,]),'programa3':([8,28,],[18,33,]),'seen_prototipo':([6,],[10,]),'programa1':([0,10,],[1,21,]),'termino':([84,87,89,90,91,119,141,155,156,159,161,165,166,167,168,169,171,216,243,],[120,120,120,120,120,120,120,120,120,194,195,120,120,120,120,120,120,120,120,]),'vars1_1':([77,],[109,]),'forexp':([83,],[117,]),'array':([29,36,41,77,92,114,],[34,34,34,34,34,34,]),'llamada1':([91,],[136,]),'programa1_1':([10,],[22,]),'if':([42,43,65,190,196,203,208,237,],[56,56,56,56,56,56,56,56,]),'ciclo':([42,43,65,190,196,203,208,237,],[57,57,57,57,57,57,57,57,]),'tipo':([41,92,114,],[49,139,49,]),'vars2':([46,],[77,]),'array2':([226,238,],[235,242,]),'exp1':([120,],[154,]),'array1':([188,],[213,]),'vars1':([29,36,77,],[35,44,108,]),'while':([42,43,65,190,196,203,208,237,],[71,71,71,71,71,71,71,71,]),'vars3':([46,111,],[76,148,]),'llamada':([42,43,65,190,196,203,208,237,],[60,60,60,60,60,60,60,60,]),'estructura':([29,36,41,77,92,114,],[36,36,50,36,50,50,]),'condicion':([42,43,65,190,196,203,208,237,],[61,61,61,61,61,61,61,61,]),'ifelse':([218,],[229,]),'factor':([84,87,89,90,91,119,141,155,156,159,161,165,166,167,168,169,171,216,243,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'conslist1':([186,223,],[211,232,]),'main':([18,],[28,]),'lectura':([42,43,65,190,196,203,208,237,],[63,63,63,63,63,63,63,63,]),'empty':([0,5,8,10,28,42,43,46,65,74,77,82,91,93,111,120,122,125,143,188,190,196,203,208,218,222,237,],[4,9,20,23,20,64,64,79,64,97,110,115,137,142,79,157,162,172,183,215,64,64,64,64,230,142,64,]),'cons_loop':([96,182,],[144,209,]),'list1':([74,],[95,]),'seen_dato':([15,],[24,]),'generaglo':([1,],[5,]),'asignlist':([90,],[133,]),'asignlist1':([131,207,],[177,221,]),'dato':([7,29,36,37,40,41,77,92,114,],[15,38,38,45,47,51,38,51,51,]),'estatutos':([42,43,65,190,196,203,208,237,],[65,65,65,65,65,65,65,65,]),'expresion_1':([125,],[170,]),'comienza_main':([26,],[32,]),'escritura1':([87,],[127,]),'termino1':([122,],[160,]),'expresion':([84,87,89,91,119,141,216,243,],[124,128,129,138,153,181,227,244,]),'asignarray':([90,],[132,]),'conslist':([75,84,87,89,90,91,96,119,121,123,130,131,141,151,155,156,159,161,165,166,167,168,169,171,182,186,204,207,216,223,225,226,238,243,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'se_uso':([25,],[31,]),'for':([42,43,65,190,196,203,208,237,],[59,59,59,59,59,59,59,59,]),'asignacion':([42,43,65,190,196,203,208,237,],[69,69,69,69,69,69,69,69,]),'switch':([42,43,65,190,196,203,208,237,],[58,58,58,58,58,58,58,58,]),'switch2':([93,222,],[140,231,]),'consarray':([75,84,87,89,90,91,96,119,121,123,130,131,141,151,155,156,159,161,165,166,167,168,169,171,182,186,204,207,216,223,225,226,238,243,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'list':([29,36,41,77,92,114,],[39,39,39,39,39,39,]),'modulos':([18,33,],[27,27,]),'exp_1':([106,],[147,]),'programa':([0,],[2,]),'exp':([84,87,89,90,91,119,141,155,156,165,166,167,168,169,171,216,243,],[125,125,125,134,125,125,125,192,193,197,198,199,200,201,202,125,125,]),'cons_loop_1':([143,],[184,]),'asignarray1':([130,204,],[176,220,]),'asignacion1':([90,],[135,]),'escritura':([42,43,65,190,196,203,208,237,],[72,72,72,72,72,72,72,72,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> programa1 generaglo programa2 programa3 main programa3','programa',6,'p_programa','parser.py',54),
  ('programa -> empty','programa',1,'p_programa','parser.py',55),
  ('generaglo -> <empty>','generaglo',0,'p_generaglo','parser.py',59),
  ('programa1 -> RES_PROTO prototipos seen_prototipo programa1_1','programa1',4,'p_programa1','parser.py',66),
  ('seen_prototipo -> <empty>','seen_prototipo',0,'p_seen_prototipo','parser.py',71),
  ('programa1_1 -> programa1','programa1_1',1,'p_programa1_1','parser.py',78),
  ('programa1_1 -> empty','programa1_1',1,'p_programa1_1','parser.py',79),
  ('programa2 -> programa2 vars','programa2',2,'p_programa2','parser.py',84),
  ('programa2 -> empty','programa2',1,'p_programa2','parser.py',85),
  ('programa3 -> programa3 modulos','programa3',2,'p_programa3','parser.py',90),
  ('programa3 -> empty','programa3',1,'p_programa3','parser.py',91),
  ('prototipos -> RES_FUNC dato seen_dato ID LPAREN prototipos_1 RPAREN','prototipos',7,'p_prototipos','parser.py',96),
  ('seen_dato -> <empty>','seen_dato',0,'p_seen_dato','parser.py',102),
  ('prototipos_1 -> tipo ID prototipos_2','prototipos_1',3,'p_prototipos_1','parser.py',107),
  ('prototipos_2 -> COMMA prototipos_1','prototipos_2',2,'p_prototipos_2','parser.py',111),
  ('prototipos_2 -> empty','prototipos_2',1,'p_prototipos_2','parser.py',112),
  ('dato -> RES_INT','dato',1,'p_dato','parser.py',116),
  ('dato -> RES_FLOAT','dato',1,'p_dato','parser.py',117),
  ('dato -> RES_DOUBLE','dato',1,'p_dato','parser.py',118),
  ('dato -> RES_BOOLEAN','dato',1,'p_dato','parser.py',119),
  ('dato -> RES_STRING','dato',1,'p_dato','parser.py',120),
  ('tipo -> dato','tipo',1,'p_tipo','parser.py',127),
  ('tipo -> estructura','tipo',1,'p_tipo','parser.py',128),
  ('estructura -> list','estructura',1,'p_estructura','parser.py',133),
  ('estructura -> array','estructura',1,'p_estructura','parser.py',134),
  ('vars -> RES_DEF COL vars1','vars',3,'p_vars','parser.py',139),
  ('vars1 -> estructura vars1','vars1',2,'p_vars1','parser.py',144),
  ('vars1 -> dato ID vars2 vars1_1','vars1',4,'p_vars1','parser.py',145),
  ('vars1_1 -> vars1','vars1_1',1,'p_vars1_1','parser.py',154),
  ('vars1_1 -> empty','vars1_1',1,'p_vars1_1','parser.py',155),
  ('vars2 -> EQUALS cons','vars2',2,'p_vars2','parser.py',160),
  ('vars2 -> vars3','vars2',1,'p_vars2','parser.py',161),
  ('vars3 -> COMMA ID vars3','vars3',3,'p_vars3','parser.py',166),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',167),
  ('list -> RES_LIST dato ID list1','list',4,'p_list','parser.py',172),
  ('list1 -> LCURLY cons_loop RCURLY','list1',3,'p_list1','parser.py',176),
  ('list1 -> empty','list1',1,'p_list1','parser.py',177),
  ('cons_loop -> cons cons_loop_1','cons_loop',2,'p_cons_loop','parser.py',182),
  ('cons_loop_1 -> COMMA cons_loop','cons_loop_1',2,'p_cons_loop_1','parser.py',187),
  ('cons_loop_1 -> empty','cons_loop_1',1,'p_cons_loop_1','parser.py',188),
  ('array -> RES_ARRAY dato ID LBRACKET CTE_INT RBRACKET array1','array',7,'p_array','parser.py',191),
  ('array1 -> COL LBRACKET array2 RBRACKET','array1',4,'p_array1','parser.py',195),
  ('array1 -> empty','array1',1,'p_array1','parser.py',196),
  ('array2 -> cons','array2',1,'p_array2','parser.py',201),
  ('array2 -> cons COMMA array2','array2',3,'p_array2','parser.py',202),
  ('modulos -> prototipos se_uso COL bloque','modulos',4,'p_modulos','parser.py',207),
  ('se_uso -> <empty>','se_uso',0,'p_se_uso','parser.py',211),
  ('bloque -> estatutos bloque','bloque',2,'p_bloque','parser.py',227),
  ('bloque -> empty','bloque',1,'p_bloque','parser.py',228),
  ('estatutos -> condicion E_END','estatutos',2,'p_estatutos','parser.py',233),
  ('estatutos -> ciclo E_END','estatutos',2,'p_estatutos','parser.py',234),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',235),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',236),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',237),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',238),
  ('estatutos -> vars','estatutos',1,'p_estatutos','parser.py',239),
  ('ciclo -> while','ciclo',1,'p_ciclo','parser.py',244),
  ('ciclo -> for','ciclo',1,'p_ciclo','parser.py',245),
  ('condicion -> if','condicion',1,'p_condicion','parser.py',250),
  ('condicion -> switch','condicion',1,'p_condicion','parser.py',251),
  ('llamada -> ID LPAREN llamada1 RPAREN','llamada',4,'p_llamada','parser.py',256),
  ('llamada1 -> expresion','llamada1',1,'p_llamada1','parser.py',260),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',261),
  ('lectura -> RES_READ LPAREN tipo RPAREN','lectura',4,'p_lectura','parser.py',266),
  ('escritura -> RES_PRINT LPAREN escritura1 RPAREN','escritura',4,'p_escritura','parser.py',270),
  ('escritura1 -> expresion','escritura1',1,'p_escritura1','parser.py',274),
  ('escritura1 -> CTE_STRING','escritura1',1,'p_escritura1','parser.py',275),
  ('asignacion -> ID EQUALS asignacion1','asignacion',3,'p_asignacion','parser.py',281),
  ('asignacion1 -> exp','asignacion1',1,'p_asignacion1','parser.py',285),
  ('asignacion1 -> asignlist','asignacion1',1,'p_asignacion1','parser.py',286),
  ('asignacion1 -> asignarray','asignacion1',1,'p_asignacion1','parser.py',287),
  ('asignlist -> LCURLY asignlist1 RCURLY','asignlist',3,'p_asignlist','parser.py',292),
  ('asignlist1 -> cons','asignlist1',1,'p_asignlist1','parser.py',296),
  ('asignlist1 -> cons COMMA asignlist1','asignlist1',3,'p_asignlist1','parser.py',297),
  ('asignarray -> LBRACKET asignarray1 RBRACKET','asignarray',3,'p_asignarray','parser.py',302),
  ('asignarray1 -> cons','asignarray1',1,'p_asignarray1','parser.py',306),
  ('asignarray1 -> cons COMMA asignarray1','asignarray1',3,'p_asignarray1','parser.py',307),
  ('while -> RES_WHILE LPAREN expresion RPAREN COL bloque','while',6,'p_while','parser.py',312),
  ('for -> RES_FOR LPAREN forexp RPAREN COL bloque','for',6,'p_for','parser.py',316),
  ('forexp -> ID EQUALS cons COL expresion COL ID EQUALS expresion','forexp',9,'p_forexp','parser.py',320),
  ('if -> RES_IF LPAREN expresion RPAREN COL bloque ifelse','if',7,'p_if','parser.py',335),
  ('ifelse -> RES_ELSE COL bloque','ifelse',3,'p_ifelse','parser.py',340),
  ('ifelse -> empty','ifelse',1,'p_ifelse','parser.py',341),
  ('switch -> RES_SWITCH COL switch2','switch',3,'p_switch','parser.py',346),
  ('switch2 -> RES_CASE expresion COL bloque switch2','switch2',5,'p_switch2','parser.py',350),
  ('switch2 -> empty','switch2',1,'p_switch2','parser.py',351),
  ('expresion -> exp expresion_1','expresion',2,'p_expresion','parser.py',356),
  ('expresion_1 -> MIN exp','expresion_1',2,'p_expresion_1','parser.py',360),
  ('expresion_1 -> MIN_EQ exp','expresion_1',2,'p_expresion_1','parser.py',361),
  ('expresion_1 -> MAY exp','expresion_1',2,'p_expresion_1','parser.py',362),
  ('expresion_1 -> MAY_EQ exp','expresion_1',2,'p_expresion_1','parser.py',363),
  ('expresion_1 -> DIF exp','expresion_1',2,'p_expresion_1','parser.py',364),
  ('expresion_1 -> EQ_EQ exp','expresion_1',2,'p_expresion_1','parser.py',365),
  ('expresion_1 -> empty','expresion_1',1,'p_expresion_1','parser.py',366),
  ('exp -> termino exp1','exp',2,'p_exp','parser.py',370),
  ('exp1 -> PLUS exp','exp1',2,'p_exp1','parser.py',375),
  ('exp1 -> MINUS exp','exp1',2,'p_exp1','parser.py',376),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',377),
  ('termino -> factor termino1','termino',2,'p_termino','parser.py',382),
  ('termino1 -> TIMES termino','termino1',2,'p_termino1','parser.py',387),
  ('termino1 -> DIVIDE termino','termino1',2,'p_termino1','parser.py',388),
  ('termino1 -> empty','termino1',1,'p_termino1','parser.py',389),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','parser.py',394),
  ('factor -> cons','factor',1,'p_factor','parser.py',395),
  ('factor -> PLUS cons','factor',2,'p_factor','parser.py',396),
  ('factor -> MINUS cons','factor',2,'p_factor','parser.py',397),
  ('cons -> ID exp_1','cons',2,'p_cons','parser.py',402),
  ('cons -> CTE_INT','cons',1,'p_cons','parser.py',403),
  ('cons -> CTE_FLOAT','cons',1,'p_cons','parser.py',404),
  ('cons -> CTE_DOUBLE','cons',1,'p_cons','parser.py',405),
  ('cons -> CTE_STRING','cons',1,'p_cons','parser.py',406),
  ('cons -> RES_TRUE','cons',1,'p_cons','parser.py',407),
  ('cons -> RES_FALSE','cons',1,'p_cons','parser.py',408),
  ('cons -> consarray','cons',1,'p_cons','parser.py',409),
  ('cons -> conslist','cons',1,'p_cons','parser.py',410),
  ('exp_1 -> <empty>','exp_1',0,'p_exp_1','parser.py',416),
  ('main -> RES_START comienza_main COL bloque RES_END','main',5,'p_main','parser.py',424),
  ('comienza_main -> <empty>','comienza_main',0,'p_comienza_main','parser.py',428),
  ('consarray -> ID LBRACKET CTE_INT RBRACKET EQUALS cons','consarray',6,'p_consarray','parser.py',436),
  ('conslist -> ID EQUALS LCURLY conslist1 RCURLY','conslist',5,'p_conslist','parser.py',440),
  ('conslist1 -> cons','conslist1',1,'p_conslist1','parser.py',444),
  ('conslist1 -> cons COMMA conslist1','conslist1',3,'p_conslist1','parser.py',445),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',450),
]
