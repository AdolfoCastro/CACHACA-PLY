
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x96Q\x17\xa3Lp\xd8\x00WC\x05\xdc\n\xb3*\x92'
    
_lr_action_items = {'MIN':([88,89,90,91,92,104,106,108,111,140,143,144,146,148,149,179,180,181,182,183,212,221,],[-107,-106,-108,-105,-104,-101,-114,-114,152,-92,-95,-103,-96,-99,-102,-100,-93,-94,-98,-97,-111,-110,]),'RES_STRING':([8,11,23,24,25,28,29,39,64,66,67,69,71,81,84,86,87,88,89,90,91,92,96,133,170,173,175,200,202,212,221,227,],[15,15,15,15,-22,-23,15,-114,-114,-31,15,-33,15,15,-34,-36,-30,-107,-106,-108,-105,-104,-114,-32,-35,-114,15,-40,-42,-111,-110,-41,]),'MAY_EQ':([88,89,90,91,92,104,106,108,111,140,143,144,146,148,149,179,180,181,182,183,212,221,],[-107,-106,-108,-105,-104,-101,-114,-114,154,-92,-95,-103,-96,-99,-102,-100,-93,-94,-98,-97,-111,-110,]),'RES_FUNC':([1,3,5,6,7,9,10,12,13,21,22,24,25,26,28,30,31,32,34,36,38,39,42,44,50,53,54,55,59,62,64,66,67,69,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,135,140,143,144,146,148,149,155,157,158,164,165,170,173,179,180,181,182,183,185,186,187,188,189,192,193,200,202,212,221,227,],[-114,8,-114,-8,-4,-7,8,-10,-114,-9,-114,-25,-22,-24,-23,-5,-3,-6,-114,8,-26,-114,-54,-45,-53,-50,-47,-114,-52,-51,-114,-31,-114,-33,-49,-48,-46,-109,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-11,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,-100,-93,-94,-98,-97,-87,-86,-88,-89,-90,-73,-70,-40,-42,-111,-110,-41,]),'LBRACKET':([70,79,92,201,],[97,116,132,214,]),'LCURLY':([64,79,131,],[85,117,171,]),'RES_FOR':([24,25,26,28,34,35,38,39,42,50,53,55,59,62,64,66,67,69,75,76,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,140,143,144,146,148,149,155,157,158,164,165,170,173,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,200,202,212,221,225,227,],[-25,-22,-24,-23,43,43,-26,-114,-54,-53,-50,43,-52,-51,-114,-31,-114,-33,-49,-48,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,43,-100,-93,-94,-98,-97,43,-87,-86,-88,-89,-90,43,-73,-70,43,-40,-42,-111,-110,43,-41,]),'RES_ELSE':([24,25,26,28,38,39,42,50,53,54,55,59,62,64,66,67,69,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,140,143,144,146,148,149,155,157,158,164,165,170,173,179,180,181,182,183,184,185,186,187,188,189,192,193,200,202,206,212,221,227,],[-25,-22,-24,-23,-26,-114,-54,-53,-50,-47,-114,-52,-51,-114,-31,-114,-33,-49,-48,-46,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,-100,-93,-94,-98,-97,-114,-87,-86,-88,-89,-90,-73,-70,-40,-42,216,-111,-110,-41,]),'RES_END':([24,25,26,28,35,38,39,42,50,53,54,55,59,62,63,64,66,67,69,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,140,143,144,146,148,149,155,157,158,164,165,170,173,179,180,181,182,183,185,186,187,188,189,192,193,200,202,212,221,227,],[-25,-22,-24,-23,-114,-26,-114,-54,-53,-50,-47,-114,-52,-51,83,-114,-31,-114,-33,-49,-48,-46,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,-100,-93,-94,-98,-97,-87,-86,-88,-89,-90,-73,-70,-40,-42,-111,-110,-41,]),'COL':([19,20,60,88,89,90,91,92,104,106,108,111,135,138,140,143,144,146,148,149,150,155,157,159,166,173,177,179,180,181,182,183,185,186,187,188,189,212,215,216,221,],[34,35,82,-107,-106,-108,-105,-104,-101,-114,-114,-114,-11,178,-92,-95,-103,-96,-99,-102,184,-85,-91,190,195,201,204,-100,-93,-94,-98,-97,-87,-86,-88,-89,-90,-111,224,225,-110,]),'RES_IF':([24,25,26,28,34,35,38,39,42,50,53,55,59,62,64,66,67,69,75,76,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,140,143,144,146,148,149,155,157,158,164,165,170,173,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,200,202,212,221,225,227,],[-25,-22,-24,-23,45,45,-26,-114,-54,-53,-50,45,-52,-51,-114,-31,-114,-33,-49,-48,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,45,-100,-93,-94,-98,-97,45,-87,-86,-88,-89,-90,45,-73,-70,45,-40,-42,-111,-110,45,-41,]),'RES_PRINT':([24,25,26,28,34,35,38,39,42,50,53,55,59,62,64,66,67,69,75,76,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,140,143,144,146,148,149,155,157,158,164,165,170,173,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,200,202,212,221,225,227,],[-25,-22,-24,-23,46,46,-26,-114,-54,-53,-50,46,-52,-51,-114,-31,-114,-33,-49,-48,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,46,-100,-93,-94,-98,-97,46,-87,-86,-88,-89,-90,46,-73,-70,46,-40,-42,-111,-110,46,-41,]),'RES_START':([1,5,6,7,9,10,12,13,21,24,25,26,28,30,31,32,34,38,39,42,44,50,53,54,55,59,62,64,66,67,69,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,135,140,143,144,146,148,149,155,157,158,164,165,170,173,179,180,181,182,183,185,186,187,188,189,192,193,200,202,212,221,227,],[-114,-114,-8,-4,-7,20,-10,-114,-9,-25,-22,-24,-23,-5,-3,-6,-114,-26,-114,-54,-45,-53,-50,-47,-114,-52,-51,-114,-31,-114,-33,-49,-48,-46,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-11,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,-100,-93,-94,-98,-97,-87,-86,-88,-89,-90,-73,-70,-40,-42,-111,-110,-41,]),'MIN_EQ':([88,89,90,91,92,104,106,108,111,140,143,144,146,148,149,179,180,181,182,183,212,221,],[-107,-106,-108,-105,-104,-101,-114,-114,151,-92,-95,-103,-96,-99,-102,-100,-93,-94,-98,-97,-111,-110,]),'RES_FLOAT':([8,11,23,24,25,28,29,39,64,66,67,69,71,81,84,86,87,88,89,90,91,92,96,133,170,173,175,200,202,212,221,227,],[18,18,18,18,-22,-23,18,-114,-114,-31,18,-33,18,18,-34,-36,-30,-107,-106,-108,-105,-104,-114,-32,-35,-114,18,-40,-42,-111,-110,-41,]),'RES_DEF':([1,5,6,7,9,13,24,25,26,28,30,31,32,34,35,38,39,42,50,53,55,59,62,64,66,67,69,75,76,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,135,140,143,144,146,148,149,155,157,158,164,165,170,173,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,200,202,212,221,225,227,],[-114,11,-8,-4,-7,-114,-25,-22,-24,-23,-5,-3,-6,11,11,-26,-114,-54,-53,-50,11,-52,-51,-114,-31,-114,-33,-49,-48,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-11,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,11,-100,-93,-94,-98,-97,11,-87,-86,-88,-89,-90,11,-73,-70,11,-40,-42,-111,-110,11,-41,]),'MINUS':([73,74,78,79,80,88,89,90,91,92,104,105,106,108,127,141,142,144,145,146,147,148,149,151,152,153,154,156,179,182,183,204,212,221,231,],[107,107,107,107,107,-107,-106,-108,-105,-104,-101,107,142,-114,107,107,107,-103,107,-96,107,-99,-102,107,107,107,107,107,-100,-98,-97,107,-111,-110,107,]),'RES_ARRAY':([11,24,25,28,39,64,66,67,69,71,81,84,86,87,88,89,90,91,92,96,133,170,173,175,200,202,212,221,227,],[29,29,-22,-23,-114,-114,-31,29,-33,29,29,-34,-36,-30,-107,-106,-108,-105,-104,-114,-32,-35,-114,29,-40,-42,-111,-110,-41,]),'E_END':([24,25,26,28,38,39,42,47,48,49,50,51,52,53,54,55,59,61,62,64,66,67,69,75,76,77,82,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,126,128,133,140,143,144,146,148,149,155,157,158,164,165,170,173,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,200,202,205,206,207,210,212,217,218,219,221,225,227,229,],[-25,-22,-24,-23,-26,-114,-54,75,-58,-56,-53,76,-57,-50,-47,-114,-52,-55,-51,-114,-31,-114,-33,-49,-48,-46,-114,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-82,-84,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,-114,-100,-93,-94,-98,-97,-114,-87,-86,-88,-89,-90,-114,-73,-70,-114,-40,-42,-77,-114,-76,-114,-111,-79,-81,-83,-110,-114,-41,-80,]),'COMMA':([39,88,89,90,91,92,96,129,136,160,163,197,212,221,222,],[68,-107,-106,-108,-105,-104,68,167,175,191,194,211,-111,-110,226,]),'PLUS':([73,74,78,79,80,88,89,90,91,92,104,105,106,108,127,141,142,144,145,146,147,148,149,151,152,153,154,156,179,182,183,204,212,221,231,],[109,109,109,109,109,-107,-106,-108,-105,-104,-101,109,141,-114,109,109,109,-103,109,-96,109,-99,-102,109,109,109,109,109,-100,-98,-97,109,-111,-110,109,]),'DIF':([88,89,90,91,92,104,106,108,111,140,143,144,146,148,149,179,180,181,182,183,212,221,],[-107,-106,-108,-105,-104,-101,-114,-114,156,-92,-95,-103,-96,-99,-102,-100,-93,-94,-98,-97,-111,-110,]),'$end':([0,2,4,12,21,22,24,25,26,28,34,36,38,39,42,44,50,53,54,55,59,62,64,66,67,69,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,140,143,144,146,148,149,155,157,158,164,165,170,173,179,180,181,182,183,185,186,187,188,189,192,193,200,202,212,221,227,],[-114,0,-2,-10,-9,-114,-25,-22,-24,-23,-114,-1,-26,-114,-54,-45,-53,-50,-47,-114,-52,-51,-114,-31,-114,-33,-49,-48,-46,-109,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,-100,-93,-94,-98,-97,-87,-86,-88,-89,-90,-73,-70,-40,-42,-111,-110,-41,]),'CTE_STRING':([74,],[112,]),'DIVIDE':([88,89,90,91,92,104,108,144,149,179,212,221,],[-107,-106,-108,-105,-104,-101,145,-103,-102,-100,-111,-110,]),'EQUALS':([39,57,92,102,199,228,],[65,79,131,137,213,231,]),'TIMES':([88,89,90,91,92,104,108,144,149,179,212,221,],[-107,-106,-108,-105,-104,-101,147,-103,-102,-100,-111,-110,]),'RES_WHILE':([24,25,26,28,34,35,38,39,42,50,53,55,59,62,64,66,67,69,75,76,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,140,143,144,146,148,149,155,157,158,164,165,170,173,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,200,202,212,221,225,227,],[-25,-22,-24,-23,56,56,-26,-114,-54,-53,-50,56,-52,-51,-114,-31,-114,-33,-49,-48,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,56,-100,-93,-94,-98,-97,56,-87,-86,-88,-89,-90,56,-73,-70,56,-40,-42,-111,-110,56,-41,]),'LPAREN':([41,43,45,46,56,57,58,73,74,78,79,80,105,127,141,142,145,147,151,152,153,154,156,204,231,],[71,72,73,74,78,80,81,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'RPAREN':([14,15,16,18,25,28,64,80,84,86,88,89,90,91,92,98,100,101,103,104,106,108,110,111,112,113,114,115,122,123,124,125,136,139,140,143,144,146,148,149,155,157,170,173,174,176,179,180,181,182,183,185,186,187,188,189,200,202,203,212,221,227,232,],[-16,-19,-18,-17,-22,-23,-114,-114,-34,-36,-107,-106,-108,-105,-104,135,-21,-20,138,-101,-114,-114,150,-114,-65,158,-64,159,164,-61,-60,165,-114,179,-92,-95,-103,-96,-99,-102,-85,-91,-35,-114,-13,-15,-100,-93,-94,-98,-97,-87,-86,-88,-89,-90,-40,-42,-14,-111,-110,-41,-78,]),'CTE_INT':([65,73,74,78,79,80,85,97,105,107,109,116,117,127,132,137,141,142,145,147,151,152,153,154,156,167,171,191,194,204,211,213,214,226,231,],[91,91,91,91,91,91,91,134,91,91,91,91,91,91,172,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'ID':([14,15,16,17,18,24,25,26,27,28,33,34,35,37,38,39,40,42,50,53,55,59,62,64,65,66,67,68,69,72,73,74,75,76,78,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,99,100,101,104,105,106,107,108,109,111,116,117,118,119,120,121,127,133,137,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,164,165,167,170,171,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,200,202,204,211,212,213,214,221,224,225,226,227,231,],[-16,-19,-18,-12,-17,-25,-22,-24,39,-23,41,57,57,64,-26,-114,70,-54,-53,-50,57,-52,-51,-114,92,-31,-114,96,-33,102,92,92,-49,-48,92,92,92,-34,92,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,136,-21,-20,-101,92,-114,92,-114,92,-114,92,92,-69,-68,-67,-66,92,-32,92,-92,92,92,-95,-103,92,-96,92,-99,-102,92,92,92,92,-85,92,-91,-63,-59,-62,92,-35,92,-114,57,-100,-93,-94,-98,-97,57,-87,-86,-88,-89,-90,57,92,-73,-70,92,57,-40,-42,92,92,-111,92,92,-110,228,57,92,-41,92,]),'RES_LIST':([11,24,25,28,39,64,66,67,69,71,81,84,86,87,88,89,90,91,92,96,133,170,173,175,200,202,212,221,227,],[23,23,-22,-23,-114,-114,-31,23,-33,23,23,-34,-36,-30,-107,-106,-108,-105,-104,-114,-32,-35,-114,23,-40,-42,-111,-110,-41,]),'RES_INT':([8,11,23,24,25,28,29,39,64,66,67,69,71,81,84,86,87,88,89,90,91,92,96,133,170,173,175,200,202,212,221,227,],[14,14,14,14,-22,-23,14,-114,-114,-31,14,-33,14,14,-34,-36,-30,-107,-106,-108,-105,-104,-114,-32,-35,-114,14,-40,-42,-111,-110,-41,]),'RES_READ':([24,25,26,28,34,35,38,39,42,50,53,55,59,62,64,66,67,69,75,76,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,140,143,144,146,148,149,155,157,158,164,165,170,173,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,200,202,212,221,225,227,],[-25,-22,-24,-23,58,58,-26,-114,-54,-53,-50,58,-52,-51,-114,-31,-114,-33,-49,-48,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,58,-100,-93,-94,-98,-97,58,-87,-86,-88,-89,-90,58,-73,-70,58,-40,-42,-111,-110,58,-41,]),'MAY':([88,89,90,91,92,104,106,108,111,140,143,144,146,148,149,179,180,181,182,183,212,221,],[-107,-106,-108,-105,-104,-101,-114,-114,153,-92,-95,-103,-96,-99,-102,-100,-93,-94,-98,-97,-111,-110,]),'RES_SWITCH':([24,25,26,28,34,35,38,39,42,50,53,55,59,62,64,66,67,69,75,76,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,140,143,144,146,148,149,155,157,158,164,165,170,173,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,200,202,212,221,225,227,],[-25,-22,-24,-23,60,60,-26,-114,-54,-53,-50,60,-52,-51,-114,-31,-114,-33,-49,-48,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,60,-100,-93,-94,-98,-97,60,-87,-86,-88,-89,-90,60,-73,-70,60,-40,-42,-111,-110,60,-41,]),'CTE_FLOAT':([65,73,74,78,79,80,85,105,107,109,116,117,127,137,141,142,145,147,151,152,153,154,156,167,171,191,194,204,211,213,214,226,231,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'RES_BOOLEAN':([8,11,23,24,25,28,29,39,64,66,67,69,71,81,84,86,87,88,89,90,91,92,96,133,170,173,175,200,202,212,221,227,],[16,16,16,16,-22,-23,16,-114,-114,-31,16,-33,16,16,-34,-36,-30,-107,-106,-108,-105,-104,-114,-32,-35,-114,16,-40,-42,-111,-110,-41,]),'RCURLY':([88,89,90,91,92,129,130,162,163,168,169,196,197,198,209,212,220,221,],[-107,-106,-108,-105,-104,-114,170,193,-71,-39,-37,-38,-112,212,-72,-111,-113,-110,]),'RBRACKET':([88,89,90,91,92,134,160,161,172,208,212,221,222,223,230,],[-107,-106,-108,-105,-104,173,-74,192,199,-75,-111,-110,-43,227,-44,]),'RES_PROTO':([0,7,13,135,],[3,-4,3,-11,]),'RES_CASE':([24,25,26,28,38,39,42,50,53,54,55,59,62,64,66,67,69,75,76,77,82,84,86,87,88,89,90,91,92,93,94,95,96,104,106,108,111,118,119,120,121,133,140,143,144,146,148,149,155,157,158,164,165,170,173,179,180,181,182,183,185,186,187,188,189,192,193,195,200,202,210,212,221,227,],[-25,-22,-24,-23,-26,-114,-54,-53,-50,-47,-114,-52,-51,-114,-31,-114,-33,-49,-48,-46,127,-34,-36,-30,-107,-106,-108,-105,-104,-28,-27,-29,-114,-101,-114,-114,-114,-69,-68,-67,-66,-32,-92,-95,-103,-96,-99,-102,-85,-91,-63,-59,-62,-35,-114,-100,-93,-94,-98,-97,-87,-86,-88,-89,-90,-73,-70,-114,-40,-42,127,-111,-110,-41,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prototipos':([3,10,36,],[7,19,19,]),'bloque':([34,35,55,178,184,190,195,225,],[44,63,77,205,206,207,210,229,]),'cons':([65,73,74,78,79,80,85,105,107,109,116,117,127,137,141,142,145,147,151,152,153,154,156,167,171,191,194,204,211,213,214,226,231,],[87,104,104,104,104,104,129,104,144,149,160,163,104,177,104,104,104,104,104,104,104,104,104,129,197,160,163,104,197,221,222,222,104,]),'forexp':([72,],[103,]),'vars':([5,34,35,55,178,184,190,195,225,],[9,42,42,42,42,42,42,42,42,]),'prototipos_1':([71,175,],[98,203,]),'programa2':([1,],[5,]),'programa3':([5,22,],[10,36,]),'seen_prototipo':([7,],[13,]),'programa1':([0,13,],[1,30,]),'asignlist':([79,],[119,]),'termino':([73,74,78,79,80,105,127,141,142,145,147,151,152,153,154,156,204,231,],[106,106,106,106,106,106,106,106,106,182,183,106,106,106,106,106,106,106,]),'vars1_1':([67,],[94,]),'prototipos_2':([136,],[174,]),'array':([11,24,67,71,81,175,],[28,28,28,28,28,28,]),'llamada1':([80,],[122,]),'programa1_1':([13,],[31,]),'if':([34,35,55,178,184,190,195,225,],[52,52,52,52,52,52,52,52,]),'ciclo':([34,35,55,178,184,190,195,225,],[47,47,47,47,47,47,47,47,]),'for':([34,35,55,178,184,190,195,225,],[49,49,49,49,49,49,49,49,]),'vars2':([39,],[67,]),'array2':([214,226,],[223,230,]),'exp1':([106,],[140,]),'array1':([173,],[200,]),'modulos':([10,36,],[21,21,]),'vars3':([39,96,],[66,133,]),'llamada':([34,35,55,178,184,190,195,225,],[50,50,50,50,50,50,50,50,]),'estructura':([11,24,67,71,81,175,],[24,24,24,100,100,100,]),'condicion':([34,35,55,178,184,190,195,225,],[51,51,51,51,51,51,51,51,]),'ifelse':([206,],[217,]),'vars1':([11,24,67,],[26,38,93,]),'conslist1':([171,211,],[198,220,]),'main':([10,],[22,]),'lectura':([34,35,55,178,184,190,195,225,],[53,53,53,53,53,53,53,53,]),'empty':([0,1,5,13,22,34,35,39,55,64,67,80,82,96,106,108,111,129,136,173,178,184,190,195,206,210,225,],[4,6,12,32,12,54,54,69,54,86,95,123,128,69,143,148,157,168,176,202,54,54,54,54,218,128,54,]),'cons_loop':([85,167,],[130,196,]),'seen_dato':([17,],[33,]),'list1':([64,],[84,]),'factor':([73,74,78,79,80,105,127,141,142,145,147,151,152,153,154,156,204,231,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'asignlist1':([117,194,],[162,209,]),'dato':([8,11,23,24,29,67,71,81,175,],[17,27,37,27,40,27,101,101,101,]),'estatutos':([34,35,55,178,184,190,195,225,],[55,55,55,55,55,55,55,55,]),'expresion_1':([111,],[155,]),'escritura1':([74,],[113,]),'termino1':([108,],[146,]),'expresion':([73,74,78,79,80,105,127,204,231,],[110,114,115,120,124,139,166,215,232,]),'asignarray':([79,],[118,]),'conslist':([65,73,74,78,79,80,85,105,107,109,116,117,127,137,141,142,145,147,151,152,153,154,156,167,171,191,194,204,211,213,214,226,231,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'tipo':([71,81,175,],[99,125,99,]),'asignacion':([34,35,55,178,184,190,195,225,],[59,59,59,59,59,59,59,59,]),'switch':([34,35,55,178,184,190,195,225,],[48,48,48,48,48,48,48,48,]),'switch2':([82,210,],[126,219,]),'consarray':([65,73,74,78,79,80,85,105,107,109,116,117,127,137,141,142,145,147,151,152,153,154,156,167,171,191,194,204,211,213,214,226,231,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'list':([11,24,67,71,81,175,],[25,25,25,25,25,25,]),'while':([34,35,55,178,184,190,195,225,],[61,61,61,61,61,61,61,61,]),'programa':([0,],[2,]),'exp':([73,74,78,79,80,105,127,141,142,151,152,153,154,156,204,231,],[111,111,111,111,111,111,111,180,181,185,186,187,188,189,111,111,]),'cons_loop_1':([129,],[169,]),'asignarray1':([116,191,],[161,208,]),'asignacion1':([79,],[121,]),'escritura':([34,35,55,178,184,190,195,225,],[62,62,62,62,62,62,62,62,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> programa1 programa2 programa3 main programa3','programa',5,'p_programa','parser.py',27),
  ('programa -> empty','programa',1,'p_programa','parser.py',28),
  ('programa1 -> RES_PROTO prototipos seen_prototipo programa1_1','programa1',4,'p_programa1','parser.py',32),
  ('seen_prototipo -> <empty>','seen_prototipo',0,'p_seen_prototipo','parser.py',37),
  ('programa1_1 -> programa1','programa1_1',1,'p_programa1_1','parser.py',45),
  ('programa1_1 -> empty','programa1_1',1,'p_programa1_1','parser.py',46),
  ('programa2 -> programa2 vars','programa2',2,'p_programa2','parser.py',51),
  ('programa2 -> empty','programa2',1,'p_programa2','parser.py',52),
  ('programa3 -> programa3 modulos','programa3',2,'p_programa3','parser.py',57),
  ('programa3 -> empty','programa3',1,'p_programa3','parser.py',58),
  ('prototipos -> RES_FUNC dato seen_dato ID LPAREN prototipos_1 RPAREN','prototipos',7,'p_prototipos','parser.py',63),
  ('seen_dato -> <empty>','seen_dato',0,'p_seen_dato','parser.py',69),
  ('prototipos_1 -> tipo ID prototipos_2','prototipos_1',3,'p_prototipos_1','parser.py',74),
  ('prototipos_2 -> COMMA prototipos_1','prototipos_2',2,'p_prototipos_2','parser.py',78),
  ('prototipos_2 -> empty','prototipos_2',1,'p_prototipos_2','parser.py',79),
  ('dato -> RES_INT','dato',1,'p_dato','parser.py',83),
  ('dato -> RES_FLOAT','dato',1,'p_dato','parser.py',84),
  ('dato -> RES_BOOLEAN','dato',1,'p_dato','parser.py',85),
  ('dato -> RES_STRING','dato',1,'p_dato','parser.py',86),
  ('tipo -> dato','tipo',1,'p_tipo','parser.py',93),
  ('tipo -> estructura','tipo',1,'p_tipo','parser.py',94),
  ('estructura -> list','estructura',1,'p_estructura','parser.py',99),
  ('estructura -> array','estructura',1,'p_estructura','parser.py',100),
  ('vars -> RES_DEF vars1','vars',2,'p_vars','parser.py',105),
  ('vars1 -> estructura','vars1',1,'p_vars1','parser.py',109),
  ('vars1 -> estructura vars1','vars1',2,'p_vars1','parser.py',110),
  ('vars1 -> dato ID vars2 vars1_1','vars1',4,'p_vars1','parser.py',111),
  ('vars1_1 -> vars1','vars1_1',1,'p_vars1_1','parser.py',116),
  ('vars1_1 -> empty','vars1_1',1,'p_vars1_1','parser.py',117),
  ('vars2 -> EQUALS cons','vars2',2,'p_vars2','parser.py',122),
  ('vars2 -> vars3','vars2',1,'p_vars2','parser.py',123),
  ('vars3 -> COMMA ID vars3','vars3',3,'p_vars3','parser.py',128),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',129),
  ('list -> RES_LIST dato ID list1','list',4,'p_list','parser.py',134),
  ('list1 -> LCURLY cons_loop RCURLY','list1',3,'p_list1','parser.py',138),
  ('list1 -> empty','list1',1,'p_list1','parser.py',139),
  ('cons_loop -> cons cons_loop_1','cons_loop',2,'p_cons_loop','parser.py',144),
  ('cons_loop_1 -> COMMA cons_loop','cons_loop_1',2,'p_cons_loop_1','parser.py',149),
  ('cons_loop_1 -> empty','cons_loop_1',1,'p_cons_loop_1','parser.py',150),
  ('array -> RES_ARRAY dato ID LBRACKET CTE_INT RBRACKET array1','array',7,'p_array','parser.py',153),
  ('array1 -> COL LBRACKET array2 RBRACKET','array1',4,'p_array1','parser.py',157),
  ('array1 -> empty','array1',1,'p_array1','parser.py',158),
  ('array2 -> cons','array2',1,'p_array2','parser.py',163),
  ('array2 -> cons COMMA array2','array2',3,'p_array2','parser.py',164),
  ('modulos -> prototipos COL bloque','modulos',3,'p_modulos','parser.py',169),
  ('bloque -> estatutos bloque','bloque',2,'p_bloque','parser.py',173),
  ('bloque -> empty','bloque',1,'p_bloque','parser.py',174),
  ('estatutos -> condicion E_END','estatutos',2,'p_estatutos','parser.py',179),
  ('estatutos -> ciclo E_END','estatutos',2,'p_estatutos','parser.py',180),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',181),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',182),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',183),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',184),
  ('estatutos -> vars','estatutos',1,'p_estatutos','parser.py',185),
  ('ciclo -> while','ciclo',1,'p_ciclo','parser.py',190),
  ('ciclo -> for','ciclo',1,'p_ciclo','parser.py',191),
  ('condicion -> if','condicion',1,'p_condicion','parser.py',196),
  ('condicion -> switch','condicion',1,'p_condicion','parser.py',197),
  ('llamada -> ID LPAREN llamada1 RPAREN','llamada',4,'p_llamada','parser.py',202),
  ('llamada1 -> expresion','llamada1',1,'p_llamada1','parser.py',206),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',207),
  ('lectura -> RES_READ LPAREN tipo RPAREN','lectura',4,'p_lectura','parser.py',212),
  ('escritura -> RES_PRINT LPAREN escritura1 RPAREN','escritura',4,'p_escritura','parser.py',216),
  ('escritura1 -> expresion','escritura1',1,'p_escritura1','parser.py',220),
  ('escritura1 -> CTE_STRING','escritura1',1,'p_escritura1','parser.py',221),
  ('asignacion -> ID EQUALS asignacion1','asignacion',3,'p_asignacion','parser.py',227),
  ('asignacion1 -> expresion','asignacion1',1,'p_asignacion1','parser.py',231),
  ('asignacion1 -> asignlist','asignacion1',1,'p_asignacion1','parser.py',232),
  ('asignacion1 -> asignarray','asignacion1',1,'p_asignacion1','parser.py',233),
  ('asignlist -> LCURLY asignlist1 RCURLY','asignlist',3,'p_asignlist','parser.py',238),
  ('asignlist1 -> cons','asignlist1',1,'p_asignlist1','parser.py',242),
  ('asignlist1 -> cons COMMA asignlist1','asignlist1',3,'p_asignlist1','parser.py',243),
  ('asignarray -> LBRACKET asignarray1 RBRACKET','asignarray',3,'p_asignarray','parser.py',248),
  ('asignarray1 -> cons','asignarray1',1,'p_asignarray1','parser.py',252),
  ('asignarray1 -> cons COMMA asignarray1','asignarray1',3,'p_asignarray1','parser.py',253),
  ('while -> RES_WHILE LPAREN expresion RPAREN COL bloque','while',6,'p_while','parser.py',258),
  ('for -> RES_FOR LPAREN forexp RPAREN COL bloque','for',6,'p_for','parser.py',262),
  ('forexp -> ID EQUALS cons COL expresion COL ID EQUALS expresion','forexp',9,'p_forexp','parser.py',266),
  ('if -> RES_IF LPAREN expresion RPAREN COL bloque ifelse','if',7,'p_if','parser.py',281),
  ('ifelse -> RES_ELSE COL bloque','ifelse',3,'p_ifelse','parser.py',286),
  ('ifelse -> empty','ifelse',1,'p_ifelse','parser.py',287),
  ('switch -> RES_SWITCH COL switch2','switch',3,'p_switch','parser.py',292),
  ('switch2 -> RES_CASE expresion COL bloque switch2','switch2',5,'p_switch2','parser.py',296),
  ('switch2 -> empty','switch2',1,'p_switch2','parser.py',297),
  ('expresion -> exp expresion_1','expresion',2,'p_expresion','parser.py',302),
  ('expresion_1 -> MIN exp','expresion_1',2,'p_expresion_1','parser.py',306),
  ('expresion_1 -> MIN_EQ exp','expresion_1',2,'p_expresion_1','parser.py',307),
  ('expresion_1 -> MAY exp','expresion_1',2,'p_expresion_1','parser.py',308),
  ('expresion_1 -> MAY_EQ exp','expresion_1',2,'p_expresion_1','parser.py',309),
  ('expresion_1 -> DIF exp','expresion_1',2,'p_expresion_1','parser.py',310),
  ('expresion_1 -> empty','expresion_1',1,'p_expresion_1','parser.py',311),
  ('exp -> termino exp1','exp',2,'p_exp','parser.py',315),
  ('exp1 -> PLUS exp','exp1',2,'p_exp1','parser.py',320),
  ('exp1 -> MINUS exp','exp1',2,'p_exp1','parser.py',321),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',322),
  ('termino -> factor termino1','termino',2,'p_termino','parser.py',327),
  ('termino1 -> TIMES termino','termino1',2,'p_termino1','parser.py',332),
  ('termino1 -> DIVIDE termino','termino1',2,'p_termino1','parser.py',333),
  ('termino1 -> empty','termino1',1,'p_termino1','parser.py',334),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','parser.py',339),
  ('factor -> cons','factor',1,'p_factor','parser.py',340),
  ('factor -> PLUS cons','factor',2,'p_factor','parser.py',341),
  ('factor -> MINUS cons','factor',2,'p_factor','parser.py',342),
  ('cons -> ID','cons',1,'p_cons','parser.py',347),
  ('cons -> CTE_INT','cons',1,'p_cons','parser.py',348),
  ('cons -> CTE_FLOAT','cons',1,'p_cons','parser.py',349),
  ('cons -> consarray','cons',1,'p_cons','parser.py',350),
  ('cons -> conslist','cons',1,'p_cons','parser.py',351),
  ('main -> RES_START COL bloque RES_END','main',4,'p_main','parser.py',356),
  ('consarray -> ID LBRACKET CTE_INT RBRACKET EQUALS cons','consarray',6,'p_consarray','parser.py',361),
  ('conslist -> ID EQUALS LCURLY conslist1 RCURLY','conslist',5,'p_conslist','parser.py',365),
  ('conslist1 -> cons','conslist1',1,'p_conslist1','parser.py',369),
  ('conslist1 -> cons COMMA conslist1','conslist1',3,'p_conslist1','parser.py',370),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',375),
]
